-- Made with 'mini.colors' module of https://github.com/echasnovski/mini.nvim

if vim.g.colors_name ~= nil then vim.cmd('highlight clear') end
vim.g.colors_name = "everforest"

-- Highlight groups
local hi = vim.api.nvim_set_hl

hi(0, "@annotation", { link = "TSAnnotation" })
hi(0, "@attribute", { link = "TSAttribute" })
hi(0, "@attribute.builtin", { link = "Special" })
hi(0, "@boolean", { link = "TSBoolean" })
hi(0, "@boolean.yaml", { link = "yamlTSBoolean" })
hi(0, "@character", { link = "TSCharacter" })
hi(0, "@character.special", { link = "TSCharacterSpecial" })
hi(0, "@comment", { link = "TSComment" })
hi(0, "@comment.error", { link = "TSDanger" })
hi(0, "@comment.note", { link = "TSNote" })
hi(0, "@comment.todo", { link = "TSTodo" })
hi(0, "@comment.warning", { link = "TSWarning" })
hi(0, "@conceal", { link = "Grey" })
hi(0, "@conditional", { link = "TSConditional" })
hi(0, "@constant", { link = "TSConstant" })
hi(0, "@constant.builtin", { link = "TSConstBuiltin" })
hi(0, "@constant.builtin.go", { link = "goTSConstBuiltin" })
hi(0, "@constant.builtin.yaml", { link = "yamlTSConstBuiltin" })
hi(0, "@constant.macro", { link = "TSConstMacro" })
hi(0, "@constant.regex", { link = "TSConstBuiltin" })
hi(0, "@constructor", { link = "TSConstructor" })
hi(0, "@constructor.lua", { link = "luaTSConstructor" })
hi(0, "@constructor.tsx", { link = "tsxTSConstructor" })
hi(0, "@debug", { link = "TSDebug" })
hi(0, "@define", { link = "TSDefine" })
hi(0, "@diff.delta", { link = "diffChanged" })
hi(0, "@diff.minus", { link = "diffRemoved" })
hi(0, "@diff.plus", { link = "diffAdded" })
hi(0, "@error", { link = "TSError" })
hi(0, "@exception", { link = "TSException" })
hi(0, "@field", { link = "TSField" })
hi(0, "@field.yaml", { link = "yamlTSField" })
hi(0, "@float", { link = "TSFloat" })
hi(0, "@function", { link = "TSFunction" })
hi(0, "@function.builtin", { link = "TSFuncBuiltin" })
hi(0, "@function.call", { link = "TSFunctionCall" })
hi(0, "@function.macro", { link = "TSFuncMacro" })
hi(0, "@function.method", { link = "TSMethod" })
hi(0, "@function.method.call", { link = "TSMethodCall" })
hi(0, "@ibl.indent.char.1", { fg = "#545c62", nocombine = true })
hi(0, "@ibl.scope.char.1", { fg = "#8a978e", nocombine = true })
hi(0, "@ibl.scope.underline.1", { sp = "#7d8a81", underline = true })
hi(0, "@ibl.whitespace.char.1", { fg = "#545c62", nocombine = true })
hi(0, "@include", { link = "TSInclude" })
hi(0, "@include.go", { link = "goTSInclude" })
hi(0, "@include.javascript", { link = "javascriptTSInclude" })
hi(0, "@include.typescript", { link = "typescriptTSInclude" })
hi(0, "@keyword", { link = "TSKeyword" })
hi(0, "@keyword.conditional", { link = "TSConditional" })
hi(0, "@keyword.debug", { link = "TSDebug" })
hi(0, "@keyword.directive", { link = "TSPreProc" })
hi(0, "@keyword.directive.define", { link = "TSDefine" })
hi(0, "@keyword.exception", { link = "TSException" })
hi(0, "@keyword.function", { link = "TSKeywordFunction" })
hi(0, "@keyword.import", { link = "TSInclude" })
hi(0, "@keyword.import.go", { link = "goTSInclude" })
hi(0, "@keyword.import.javascript", { link = "javascriptTSInclude" })
hi(0, "@keyword.import.typescript", { link = "typescriptTSInclude" })
hi(0, "@keyword.modifier", { link = "TSTypeQualifier" })
hi(0, "@keyword.operator", { link = "TSKeywordOperator" })
hi(0, "@keyword.repeat", { link = "TSRepeat" })
hi(0, "@keyword.return", { link = "TSKeywordReturn" })
hi(0, "@keyword.storage", { link = "TSStorageClass" })
hi(0, "@label", { link = "TSLabel" })
hi(0, "@label.json", { link = "jsonTSLabel" })
hi(0, "@lsp.mod.deprecated", { link = "DiagnosticDeprecated" })
hi(0, "@lsp.type.boolean", { link = "@boolean" })
hi(0, "@lsp.type.builtinConstant", { link = "@constant.builtin" })
hi(0, "@lsp.type.builtinType", { link = "@type.builtin" })
hi(0, "@lsp.type.class", { link = "@type" })
hi(0, "@lsp.type.comment", { link = "@comment" })
hi(0, "@lsp.type.decorator", { link = "@function" })
hi(0, "@lsp.type.derive", { link = "@constructor" })
hi(0, "@lsp.type.deriveHelper", { link = "@attribute" })
hi(0, "@lsp.type.enum", { link = "@type" })
hi(0, "@lsp.type.enumMember", { link = "@property" })
hi(0, "@lsp.type.escapeSequence", { link = "@string.escape" })
hi(0, "@lsp.type.event", { link = "@type" })
hi(0, "@lsp.type.formatSpecifier", { link = "@punctuation.special" })
hi(0, "@lsp.type.function", { link = "@function" })
hi(0, "@lsp.type.generic", { link = "@text" })
hi(0, "@lsp.type.interface", { link = "@type" })
hi(0, "@lsp.type.keyword", { link = "@keyword" })
hi(0, "@lsp.type.lifetime", { link = "@storageclass.lifetime" })
hi(0, "@lsp.type.macro", { link = "@constant.macro" })
hi(0, "@lsp.type.magicFunction", { link = "@function.builtin" })
hi(0, "@lsp.type.method", { link = "@method" })
hi(0, "@lsp.type.modifier", { link = "@type.qualifier" })
hi(0, "@lsp.type.namespace", { link = "@namespace" })
hi(0, "@lsp.type.namespace.go", { link = "@namespace.go" })
hi(0, "@lsp.type.number", { link = "@number" })
hi(0, "@lsp.type.operator", { link = "@operator" })
hi(0, "@lsp.type.parameter", { link = "@parameter" })
hi(0, "@lsp.type.property", { link = "@property" })
hi(0, "@lsp.type.regexp", { link = "@string.regex" })
hi(0, "@lsp.type.selfKeyword", { link = "@variable.builtin" })
hi(0, "@lsp.type.selfTypeKeyword", { link = "@type" })
hi(0, "@lsp.type.string", { link = "@string" })
hi(0, "@lsp.type.struct", { link = "@type" })
hi(0, "@lsp.type.type", { link = "@type" })
hi(0, "@lsp.type.typeAlias", { link = "@type.definition" })
hi(0, "@lsp.type.typeParameter", { link = "@type.definition" })
hi(0, "@lsp.type.variable", { link = "@variable" })
hi(0, "@lsp.typemod.class.defaultLibrary", { link = "@type.builtin" })
hi(0, "@lsp.typemod.enum.defaultLibrary", { link = "@type.builtin" })
hi(0, "@lsp.typemod.enumMember.defaultLibrary", { link = "@constant.builtin" })
hi(0, "@lsp.typemod.function.defaultLibrary", { link = "@function.builtin" })
hi(0, "@lsp.typemod.function.readonly", { link = "@method" })
hi(0, "@lsp.typemod.keyword.async", { link = "@keyword" })
hi(0, "@lsp.typemod.keyword.injected", { link = "@keyword" })
hi(0, "@lsp.typemod.macro.defaultLibrary", { link = "@function.builtin" })
hi(0, "@lsp.typemod.method.defaultLibrary", { link = "@function.builtin" })
hi(0, "@lsp.typemod.method.readonly", { link = "@method" })
hi(0, "@lsp.typemod.operator.injected", { link = "@operator" })
hi(0, "@lsp.typemod.string.injected", { link = "@string" })
hi(0, "@lsp.typemod.struct.defaultLibrary", { link = "@type.builtin" })
hi(0, "@lsp.typemod.type.defaultLibrary", { link = "@type.builtin" })
hi(0, "@lsp.typemod.typeAlias.defaultLibrary", { link = "@type.builtin" })
hi(0, "@lsp.typemod.variable.callable", { link = "@function" })
hi(0, "@lsp.typemod.variable.constant.rust", { link = "@constant" })
hi(0, "@lsp.typemod.variable.defaultLibrary", { link = "@variable.builtin" })
hi(0, "@lsp.typemod.variable.defaultLibrary.go", { link = "@constant.builtin.go" })
hi(0, "@lsp.typemod.variable.defaultLibrary.javascript", { link = "@constant.builtin" })
hi(0, "@lsp.typemod.variable.defaultLibrary.javascriptreact", { link = "@constant.builtin" })
hi(0, "@lsp.typemod.variable.defaultLibrary.typescript", { link = "@constant.builtin" })
hi(0, "@lsp.typemod.variable.defaultLibrary.typescriptreact", { link = "@constant.builtin" })
hi(0, "@lsp.typemod.variable.injected", { link = "@variable" })
hi(0, "@lsp.typemod.variable.static", { link = "Red" })
hi(0, "@markup.emphasis", { link = "TSEmphasis" })
hi(0, "@markup.environment", { link = "TSEnvironment" })
hi(0, "@markup.environment.name", { link = "TSEnvironmentName" })
hi(0, "@markup.heading", { link = "TSTitle" })
hi(0, "@markup.heading.1.markdown", { link = "markdownH1" })
hi(0, "@markup.heading.1.marker.markdown", { link = "@conceal" })
hi(0, "@markup.heading.2.markdown", { link = "markdownH2" })
hi(0, "@markup.heading.2.marker.markdown", { link = "@conceal" })
hi(0, "@markup.heading.3.markdown", { link = "markdownH3" })
hi(0, "@markup.heading.3.marker.markdown", { link = "@conceal" })
hi(0, "@markup.heading.4.markdown", { link = "markdownH4" })
hi(0, "@markup.heading.4.marker.markdown", { link = "@conceal" })
hi(0, "@markup.heading.5.markdown", { link = "markdownH5" })
hi(0, "@markup.heading.5.marker.markdown", { link = "@conceal" })
hi(0, "@markup.heading.6.markdown", { link = "markdownH6" })
hi(0, "@markup.heading.6.marker.markdown", { link = "@conceal" })
hi(0, "@markup.italic", { link = "TSEmphasis" })
hi(0, "@markup.link", { link = "TSTextReference" })
hi(0, "@markup.link.label", { link = "TSStringSpecial" })
hi(0, "@markup.link.url", { link = "TSURI" })
hi(0, "@markup.list", { link = "TSPunctSpecial" })
hi(0, "@markup.list.checked", { link = "Green" })
hi(0, "@markup.list.unchecked", { link = "Ignore" })
hi(0, "@markup.math", { link = "TSMath" })
hi(0, "@markup.quote", { link = "Grey" })
hi(0, "@markup.raw", { link = "TSLiteral" })
hi(0, "@markup.strike", { link = "TSStrike" })
hi(0, "@markup.strong", { link = "TSStrong" })
hi(0, "@markup.underline", { link = "TSUnderline" })
hi(0, "@math", { link = "TSMath" })
hi(0, "@method", { link = "TSMethod" })
hi(0, "@method.call", { link = "TSMethodCall" })
hi(0, "@module", { link = "TSNamespace" })
hi(0, "@module.builtin", { link = "Special" })
hi(0, "@module.go", { link = "goTSNamespace" })
hi(0, "@namespace", { link = "TSNamespace" })
hi(0, "@namespace.go", { link = "goTSNamespace" })
hi(0, "@none", { link = "TSNone" })
hi(0, "@number", { link = "TSNumber" })
hi(0, "@number.float", { link = "TSFloat" })
hi(0, "@operator", { link = "TSOperator" })
hi(0, "@parameter", { link = "TSParameter" })
hi(0, "@parameter.reference", { link = "TSParameterReference" })
hi(0, "@preproc", { link = "TSPreProc" })
hi(0, "@property", { link = "TSProperty" })
hi(0, "@property.toml", { link = "tomlTSProperty" })
hi(0, "@punctuation.bracket", { link = "TSPunctBracket" })
hi(0, "@punctuation.bracket.regex", { link = "TSStringRegex" })
hi(0, "@punctuation.delimiter", { link = "TSPunctDelimiter" })
hi(0, "@punctuation.special", { link = "TSPunctSpecial" })
hi(0, "@punctuation.special.typescript", { link = "TSOperator" })
hi(0, "@repeat", { link = "TSRepeat" })
hi(0, "@storageclass", { link = "TSStorageClass" })
hi(0, "@storageclass.lifetime", { link = "TSStorageClassLifetime" })
hi(0, "@strike", { link = "TSStrike" })
hi(0, "@string", { link = "TSString" })
hi(0, "@string.escape", { link = "TSStringEscape" })
hi(0, "@string.escape.json", { link = "jsonTSStringEscape" })
hi(0, "@string.escape.yaml", { link = "yamlTSStringEscape" })
hi(0, "@string.json", { link = "jsonTSString" })
hi(0, "@string.regex", { link = "TSStringRegex" })
hi(0, "@string.regexp", { link = "TSStringRegex" })
hi(0, "@string.special", { link = "TSStringSpecial" })
hi(0, "@string.special.symbol", { link = "TSSymbol" })
hi(0, "@string.special.url", { link = "TSURI" })
hi(0, "@string.toml", { link = "tomlTSString" })
hi(0, "@string.yaml", { link = "yamlTSString" })
hi(0, "@symbol", { link = "TSSymbol" })
hi(0, "@tag", { link = "TSTag" })
hi(0, "@tag.attribute", { link = "TSTagAttribute" })
hi(0, "@tag.builtin", { link = "Special" })
hi(0, "@tag.delimiter", { link = "TSTagDelimiter" })
hi(0, "@text", { link = "TSText" })
hi(0, "@text.danger", { link = "TSDanger" })
hi(0, "@text.diff.add", { link = "diffAdded" })
hi(0, "@text.diff.delete", { link = "diffRemoved" })
hi(0, "@text.emphasis", { link = "TSEmphasis" })
hi(0, "@text.environment", { link = "TSEnvironment" })
hi(0, "@text.environment.name", { link = "TSEnvironmentName" })
hi(0, "@text.gitcommit", { link = "TSNone" })
hi(0, "@text.html", { link = "htmlTSText" })
hi(0, "@text.literal", { link = "TSLiteral" })
hi(0, "@text.math", { link = "TSMath" })
hi(0, "@text.note", { link = "TSNote" })
hi(0, "@text.reference", { link = "TSTextReference" })
hi(0, "@text.strike", { link = "TSStrike" })
hi(0, "@text.strong", { link = "TSStrong" })
hi(0, "@text.title", { link = "TSTitle" })
hi(0, "@text.todo", { link = "TSTodo" })
hi(0, "@text.todo.checked", { link = "Green" })
hi(0, "@text.todo.unchecked", { link = "Ignore" })
hi(0, "@text.underline", { link = "TSUnderline" })
hi(0, "@text.uri", { link = "TSURI" })
hi(0, "@text.warning", { link = "TSWarning" })
hi(0, "@todo", { link = "TSTodo" })
hi(0, "@type", { link = "TSType" })
hi(0, "@type.builtin", { link = "TSTypeBuiltin" })
hi(0, "@type.definition", { link = "TSTypeDefinition" })
hi(0, "@type.qualifier", { link = "TSTypeQualifier" })
hi(0, "@uri", { link = "TSURI" })
hi(0, "@variable", { link = "TSVariable" })
hi(0, "@variable.builtin", { link = "TSVariableBuiltin" })
hi(0, "@variable.member", { link = "TSField" })
hi(0, "@variable.member.yaml", { link = "yamlTSField" })
hi(0, "@variable.parameter", { link = "TSParameter" })
hi(0, "@variable.parameter.builtin", { link = "Special" })
hi(0, "ALEError", { link = "ErrorText" })
hi(0, "ALEErrorLine", { link = "ErrorLine" })
hi(0, "ALEErrorSign", { link = "RedSign" })
hi(0, "ALEInfo", { link = "InfoText" })
hi(0, "ALEInfoLine", { link = "InfoLine" })
hi(0, "ALEInfoSign", { link = "BlueSign" })
hi(0, "ALEVirtualTextError", { link = "VirtualTextError" })
hi(0, "ALEVirtualTextInfo", { link = "VirtualTextInfo" })
hi(0, "ALEVirtualTextStyleError", { link = "VirtualTextHint" })
hi(0, "ALEVirtualTextStyleWarning", { link = "VirtualTextHint" })
hi(0, "ALEVirtualTextWarning", { link = "VirtualTextWarning" })
hi(0, "ALEWarning", { link = "WarningText" })
hi(0, "ALEWarningLine", { link = "WarningLine" })
hi(0, "ALEWarningSign", { link = "YellowSign" })
hi(0, "Added", { link = "Green" })
hi(0, "AerialArrayIcon", { link = "Aqua" })
hi(0, "AerialBooleanIcon", { link = "Aqua" })
hi(0, "AerialClassIcon", { link = "Yellow" })
hi(0, "AerialColorIcon", { link = "Aqua" })
hi(0, "AerialConstantIcon", { link = "Blue" })
hi(0, "AerialConstructorIcon", { link = "Green" })
hi(0, "AerialDefaultIcon", { link = "Aqua" })
hi(0, "AerialEnumIcon", { link = "Yellow" })
hi(0, "AerialEnumMemberIcon", { link = "Purple" })
hi(0, "AerialEventIcon", { link = "Orange" })
hi(0, "AerialFieldIcon", { link = "Green" })
hi(0, "AerialFileIcon", { link = "Green" })
hi(0, "AerialFolderIcon", { link = "Aqua" })
hi(0, "AerialFunctionIcon", { link = "Green" })
hi(0, "AerialInterfaceIcon", { link = "Yellow" })
hi(0, "AerialKeyIcon", { link = "Red" })
hi(0, "AerialKeywordIcon", { link = "Red" })
hi(0, "AerialMethodIcon", { link = "Green" })
hi(0, "AerialModuleIcon", { link = "Yellow" })
hi(0, "AerialNamespaceIcon", { link = "Purple" })
hi(0, "AerialNullIcon", { link = "Aqua" })
hi(0, "AerialNumberIcon", { link = "Aqua" })
hi(0, "AerialObjectIcon", { link = "Aqua" })
hi(0, "AerialOperatorIcon", { link = "Orange" })
hi(0, "AerialPackageIcon", { link = "Purple" })
hi(0, "AerialPropertyIcon", { link = "Blue" })
hi(0, "AerialReferenceIcon", { link = "Aqua" })
hi(0, "AerialSnippetIcon", { link = "Aqua" })
hi(0, "AerialStringIcon", { link = "Aqua" })
hi(0, "AerialStructIcon", { link = "Yellow" })
hi(0, "AerialTextIcon", { link = "Fg" })
hi(0, "AerialTypeParameterIcon", { link = "Yellow" })
hi(0, "AerialUnitIcon", { link = "Purple" })
hi(0, "AerialValueIcon", { link = "Purple" })
hi(0, "AerialVariableIcon", { link = "Blue" })
hi(0, "Aqua", { fg = "#87c696" })
hi(0, "AquaBold", { bold = true, fg = "#87c696" })
hi(0, "AquaItalic", { fg = "#87c696" })
hi(0, "AquaSign", { fg = "#87c696" })
hi(0, "Blamer", { link = "Grey" })
hi(0, "BlinkCmpKind", { link = "Yellow" })
hi(0, "BlinkCmpKindArray", { link = "Aqua" })
hi(0, "BlinkCmpKindBoolean", { link = "Aqua" })
hi(0, "BlinkCmpKindClass", { link = "Yellow" })
hi(0, "BlinkCmpKindColor", { link = "Aqua" })
hi(0, "BlinkCmpKindConstant", { link = "Blue" })
hi(0, "BlinkCmpKindConstructor", { link = "Green" })
hi(0, "BlinkCmpKindDefault", { link = "Aqua" })
hi(0, "BlinkCmpKindEnum", { link = "Yellow" })
hi(0, "BlinkCmpKindEnumMember", { link = "Purple" })
hi(0, "BlinkCmpKindEvent", { link = "Orange" })
hi(0, "BlinkCmpKindField", { link = "Green" })
hi(0, "BlinkCmpKindFile", { link = "Green" })
hi(0, "BlinkCmpKindFolder", { link = "Aqua" })
hi(0, "BlinkCmpKindFunction", { link = "Green" })
hi(0, "BlinkCmpKindInterface", { link = "Yellow" })
hi(0, "BlinkCmpKindKey", { link = "Red" })
hi(0, "BlinkCmpKindKeyword", { link = "Red" })
hi(0, "BlinkCmpKindMethod", { link = "Green" })
hi(0, "BlinkCmpKindModule", { link = "Yellow" })
hi(0, "BlinkCmpKindNamespace", { link = "Purple" })
hi(0, "BlinkCmpKindNull", { link = "Aqua" })
hi(0, "BlinkCmpKindNumber", { link = "Aqua" })
hi(0, "BlinkCmpKindObject", { link = "Aqua" })
hi(0, "BlinkCmpKindOperator", { link = "Orange" })
hi(0, "BlinkCmpKindPackage", { link = "Purple" })
hi(0, "BlinkCmpKindProperty", { link = "Blue" })
hi(0, "BlinkCmpKindReference", { link = "Aqua" })
hi(0, "BlinkCmpKindSnippet", { link = "Aqua" })
hi(0, "BlinkCmpKindString", { link = "Aqua" })
hi(0, "BlinkCmpKindStruct", { link = "Yellow" })
hi(0, "BlinkCmpKindText", { link = "Fg" })
hi(0, "BlinkCmpKindTypeParameter", { link = "Yellow" })
hi(0, "BlinkCmpKindUnit", { link = "Purple" })
hi(0, "BlinkCmpKindValue", { link = "Purple" })
hi(0, "BlinkCmpKindVariable", { link = "Blue" })
hi(0, "BlinkCmpLabelMatch", { bold = true, fg = "#abc684" })
hi(0, "Blue", { fg = "#83c1ba" })
hi(0, "BlueBold", { bold = true, fg = "#83c1ba" })
hi(0, "BlueItalic", { fg = "#83c1ba" })
hi(0, "BlueSign", { fg = "#83c1ba" })
hi(0, "BookmarkAnnotationLine", { link = "DiffAdd" })
hi(0, "BookmarkAnnotationSign", { link = "GreenSign" })
hi(0, "BookmarkLine", { link = "DiffChange" })
hi(0, "BookmarkSign", { link = "BlueSign" })
hi(0, "Boolean", { fg = "#db9dbd" })
hi(0, "BufTabLineActive", { link = "TabLine" })
hi(0, "BufTabLineCurrent", { link = "TabLineSel" })
hi(0, "BufTabLineFill", { link = "TabLineFill" })
hi(0, "BufTabLineHidden", { link = "TabLineFill" })
hi(0, "BufferCurrent", { bg = "#1b2228", fg = "#d9ccaf" })
hi(0, "BufferCurrentADDED", { bg = "#1b2228", fg = "#abc684" })
hi(0, "BufferCurrentCHANGED", { bg = "#1b2228", fg = "#83c1ba" })
hi(0, "BufferCurrentDELETED", { bg = "#1b2228", fg = "#ec8285" })
hi(0, "BufferCurrentERROR", { bg = "#1b2228", fg = "#ec8285" })
hi(0, "BufferCurrentHINT", { bg = "#1b2228", fg = "#e1c283" })
hi(0, "BufferCurrentINFO", { bg = "#1b2228", fg = "#87c696" })
hi(0, "BufferCurrentIndex", { bg = "#1b2228", fg = "#d9ccaf" })
hi(0, "BufferCurrentMod", { bg = "#1b2228", fg = "#83c1ba" })
hi(0, "BufferCurrentSign", { bg = "#1b2228", fg = "#abc684" })
hi(0, "BufferCurrentTarget", { bg = "#1b2228", bold = true, fg = "#ec8285" })
hi(0, "BufferCurrentWARN", { bg = "#1b2228", fg = "#ed9d7a" })
hi(0, "BufferInactive", { bg = "#10161a", fg = "#8a978e" })
hi(0, "BufferInactiveADDED", { bg = "#10161a", fg = "#8a978e" })
hi(0, "BufferInactiveCHANGED", { bg = "#10161a", fg = "#8a978e" })
hi(0, "BufferInactiveDELETED", { bg = "#10161a", fg = "#8a978e" })
hi(0, "BufferInactiveERROR", { bg = "#10161a", fg = "#8a978e" })
hi(0, "BufferInactiveHINT", { bg = "#10161a", fg = "#8a978e" })
hi(0, "BufferInactiveINFO", { bg = "#10161a", fg = "#8a978e" })
hi(0, "BufferInactiveIndex", { bg = "#10161a", fg = "#8a978e" })
hi(0, "BufferInactiveMod", { bg = "#10161a", fg = "#8a978e" })
hi(0, "BufferInactiveSign", { bg = "#10161a", fg = "#7f897d" })
hi(0, "BufferInactiveTarget", { bg = "#10161a", bold = true, fg = "#e1c283" })
hi(0, "BufferInactiveWARN", { bg = "#10161a", fg = "#8a978e" })
hi(0, "BufferLineIndicatorSelected", { link = "GreenSign" })
hi(0, "BufferTabpageFill", { bg = "#10161a", fg = "#292f33" })
hi(0, "BufferTabpages", { bg = "#10161a", bold = true, fg = "#8a978e" })
hi(0, "BufferVisible", { bg = "#10161a", fg = "#d9ccaf" })
hi(0, "BufferVisibleADDED", { bg = "#10161a", fg = "#abc684" })
hi(0, "BufferVisibleCHANGED", { bg = "#10161a", fg = "#83c1ba" })
hi(0, "BufferVisibleDELETED", { bg = "#10161a", fg = "#ec8285" })
hi(0, "BufferVisibleERROR", { bg = "#10161a", fg = "#ec8285" })
hi(0, "BufferVisibleHINT", { bg = "#10161a", fg = "#e1c283" })
hi(0, "BufferVisibleINFO", { bg = "#10161a", fg = "#87c696" })
hi(0, "BufferVisibleIndex", { bg = "#10161a", fg = "#d9ccaf" })
hi(0, "BufferVisibleMod", { bg = "#10161a", fg = "#83c1ba" })
hi(0, "BufferVisibleSign", { bg = "#10161a", fg = "#abc684" })
hi(0, "BufferVisibleTarget", { bg = "#10161a", bold = true, fg = "#e1c283" })
hi(0, "BufferVisibleWARN", { bg = "#10161a", fg = "#ed9d7a" })
hi(0, "BuffetActiveBuffer", { bg = "#1b2228", fg = "#d9ccaf" })
hi(0, "BuffetActiveBufferActiveBuffer", { link = "BuffetActiveBuffer" })
hi(0, "BuffetActiveBufferBuffer", { link = "BuffetActiveBuffer" })
hi(0, "BuffetActiveBufferCurrentBuffer", { bg = "#1ae416", fg = "#9d9d9d" })
hi(0, "BuffetActiveBufferEnd", { link = "BuffetActiveBuffer" })
hi(0, "BuffetActiveBufferModActiveBuffer", { link = "BuffetActiveBuffer" })
hi(0, "BuffetActiveBufferModBuffer", { link = "BuffetActiveBuffer" })
hi(0, "BuffetActiveBufferModCurrentBuffer", { bg = "#1ae416", fg = "#9d9d9d" })
hi(0, "BuffetActiveBufferRightTrunc", { link = "BuffetActiveBuffer" })
hi(0, "BuffetActiveBufferTab", { bg = "#0012c5", fg = "#9d9d9d" })
hi(0, "BuffetBuffer", { bg = "#1b2228", fg = "#d9ccaf" })
hi(0, "BuffetBufferActiveBuffer", { link = "BuffetBuffer" })
hi(0, "BuffetBufferBuffer", { link = "BuffetBuffer" })
hi(0, "BuffetBufferCurrentBuffer", { bg = "#1ae416", fg = "#9d9d9d" })
hi(0, "BuffetBufferEnd", { link = "BuffetBuffer" })
hi(0, "BuffetBufferModActiveBuffer", { link = "BuffetBuffer" })
hi(0, "BuffetBufferModBuffer", { link = "BuffetBuffer" })
hi(0, "BuffetBufferModCurrentBuffer", { bg = "#1ae416", fg = "#9d9d9d" })
hi(0, "BuffetBufferRightTrunc", { link = "BuffetBuffer" })
hi(0, "BuffetBufferTab", { bg = "#0012c5", fg = "#9d9d9d" })
hi(0, "BuffetCurrentBuffer", { bg = "#bdb094", bold = true, fg = "#333a40" })
hi(0, "BuffetCurrentBufferActiveBuffer", { bg = "#848484", fg = "#8df084" })
hi(0, "BuffetCurrentBufferBuffer", { bg = "#848484", fg = "#8df084" })
hi(0, "BuffetCurrentBufferCurrentBuffer", { link = "BuffetCurrentBuffer" })
hi(0, "BuffetCurrentBufferEnd", { bg = "#848484", fg = "#8df084" })
hi(0, "BuffetCurrentBufferModActiveBuffer", { bg = "#848484", fg = "#8df084" })
hi(0, "BuffetCurrentBufferModBuffer", { bg = "#848484", fg = "#8df084" })
hi(0, "BuffetCurrentBufferModCurrentBuffer", { link = "BuffetCurrentBuffer" })
hi(0, "BuffetCurrentBufferRightTrunc", { bg = "#848484", fg = "#8df084" })
hi(0, "BuffetCurrentBufferTab", { bg = "#0012c5", fg = "#8df084" })
hi(0, "BuffetEnd", { link = "BuffetBuffer" })
hi(0, "BuffetLeftTrunc", { link = "BuffetTrunc" })
hi(0, "BuffetLeftTruncActiveBuffer", { link = "BuffetLeftTrunc" })
hi(0, "BuffetLeftTruncBuffer", { link = "BuffetLeftTrunc" })
hi(0, "BuffetLeftTruncCurrentBuffer", { bg = "#1ae416", fg = "#9d9d9d" })
hi(0, "BuffetLeftTruncModActiveBuffer", { link = "BuffetLeftTrunc" })
hi(0, "BuffetLeftTruncModBuffer", { link = "BuffetLeftTrunc" })
hi(0, "BuffetLeftTruncModCurrentBuffer", { bg = "#1ae416", fg = "#9d9d9d" })
hi(0, "BuffetModActiveBuffer", { link = "BuffetActiveBuffer" })
hi(0, "BuffetModActiveBufferActiveBuffer", { link = "BuffetModActiveBuffer" })
hi(0, "BuffetModActiveBufferBuffer", { link = "BuffetModActiveBuffer" })
hi(0, "BuffetModActiveBufferCurrentBuffer", { bg = "#1ae416", fg = "#9d9d9d" })
hi(0, "BuffetModActiveBufferEnd", { link = "BuffetModActiveBuffer" })
hi(0, "BuffetModActiveBufferModActiveBuffer", { link = "BuffetModActiveBuffer" })
hi(0, "BuffetModActiveBufferModBuffer", { link = "BuffetModActiveBuffer" })
hi(0, "BuffetModActiveBufferModCurrentBuffer", { bg = "#1ae416", fg = "#9d9d9d" })
hi(0, "BuffetModActiveBufferRightTrunc", { link = "BuffetModActiveBuffer" })
hi(0, "BuffetModActiveBufferTab", { bg = "#0012c5", fg = "#9d9d9d" })
hi(0, "BuffetModBuffer", { link = "BuffetBuffer" })
hi(0, "BuffetModBufferActiveBuffer", { link = "BuffetModBuffer" })
hi(0, "BuffetModBufferBuffer", { link = "BuffetModBuffer" })
hi(0, "BuffetModBufferCurrentBuffer", { bg = "#1ae416", fg = "#9d9d9d" })
hi(0, "BuffetModBufferEnd", { link = "BuffetModBuffer" })
hi(0, "BuffetModBufferModActiveBuffer", { link = "BuffetModBuffer" })
hi(0, "BuffetModBufferModBuffer", { link = "BuffetModBuffer" })
hi(0, "BuffetModBufferModCurrentBuffer", { bg = "#1ae416", fg = "#9d9d9d" })
hi(0, "BuffetModBufferRightTrunc", { link = "BuffetModBuffer" })
hi(0, "BuffetModBufferTab", { bg = "#0012c5", fg = "#9d9d9d" })
hi(0, "BuffetModCurrentBuffer", { link = "BuffetCurrentBuffer" })
hi(0, "BuffetModCurrentBufferActiveBuffer", { bg = "#848484", fg = "#8df084" })
hi(0, "BuffetModCurrentBufferBuffer", { bg = "#848484", fg = "#8df084" })
hi(0, "BuffetModCurrentBufferCurrentBuffer", { link = "BuffetModCurrentBuffer" })
hi(0, "BuffetModCurrentBufferEnd", { bg = "#848484", fg = "#8df084" })
hi(0, "BuffetModCurrentBufferModActiveBuffer", { bg = "#848484", fg = "#8df084" })
hi(0, "BuffetModCurrentBufferModBuffer", { bg = "#848484", fg = "#8df084" })
hi(0, "BuffetModCurrentBufferModCurrentBuffer", { link = "BuffetModCurrentBuffer" })
hi(0, "BuffetModCurrentBufferRightTrunc", { bg = "#848484", fg = "#8df084" })
hi(0, "BuffetModCurrentBufferTab", { bg = "#0012c5", fg = "#8df084" })
hi(0, "BuffetRightTrunc", { link = "BuffetTrunc" })
hi(0, "BuffetRightTruncEnd", { link = "BuffetRightTrunc" })
hi(0, "BuffetRightTruncTab", { bg = "#0012c5", fg = "#9d9d9d" })
hi(0, "BuffetTab", { bg = "#1b2228", fg = "#d9ccaf" })
hi(0, "BuffetTabActiveBuffer", { bg = "#848484", fg = "#0131ef" })
hi(0, "BuffetTabBuffer", { bg = "#848484", fg = "#0131ef" })
hi(0, "BuffetTabCurrentBuffer", { bg = "#1ae416", fg = "#0131ef" })
hi(0, "BuffetTabEnd", { bg = "#848484", fg = "#0131ef" })
hi(0, "BuffetTabLeftTrunc", { bg = "#848484", fg = "#0131ef" })
hi(0, "BuffetTabModActiveBuffer", { bg = "#848484", fg = "#0131ef" })
hi(0, "BuffetTabModBuffer", { bg = "#848484", fg = "#0131ef" })
hi(0, "BuffetTabModCurrentBuffer", { bg = "#1ae416", fg = "#0131ef" })
hi(0, "BuffetTabTab", { link = "BuffetTab" })
hi(0, "BuffetTrunc", { bg = "#1b2228", fg = "#d9ccaf" })
hi(0, "Changed", { link = "Yellow" })
hi(0, "Character", { fg = "#abc684" })
hi(0, "ClapBlines", { fg = "#d9ccaf" })
hi(0, "ClapBlinesLineNr", { link = "Grey" })
hi(0, "ClapCurrentSelection", { bg = "#222c31", bold = true })
hi(0, "ClapDisplay", { link = "Pmenu" })
hi(0, "ClapFile", { link = "Fg" })
hi(0, "ClapFuzzyMatches", { bold = true, fg = "#abc684" })
hi(0, "ClapFuzzyMatches1", { link = "ClapFuzzyMatches" })
hi(0, "ClapFuzzyMatches10", { link = "ClapFuzzyMatches" })
hi(0, "ClapFuzzyMatches11", { link = "ClapFuzzyMatches" })
hi(0, "ClapFuzzyMatches12", { link = "ClapFuzzyMatches" })
hi(0, "ClapFuzzyMatches2", { link = "ClapFuzzyMatches" })
hi(0, "ClapFuzzyMatches3", { link = "ClapFuzzyMatches" })
hi(0, "ClapFuzzyMatches4", { link = "ClapFuzzyMatches" })
hi(0, "ClapFuzzyMatches5", { link = "ClapFuzzyMatches" })
hi(0, "ClapFuzzyMatches6", { link = "ClapFuzzyMatches" })
hi(0, "ClapFuzzyMatches7", { link = "ClapFuzzyMatches" })
hi(0, "ClapFuzzyMatches8", { link = "ClapFuzzyMatches" })
hi(0, "ClapFuzzyMatches9", { link = "ClapFuzzyMatches" })
hi(0, "ClapInput", { link = "Pmenu" })
hi(0, "ClapMatches1", { bold = true, fg = "#ec8285" })
hi(0, "ClapMatches2", { bold = true, fg = "#ed9d7a" })
hi(0, "ClapMatches3", { bold = true, fg = "#e1c283" })
hi(0, "ClapMatches4", { bold = true, fg = "#87c696" })
hi(0, "ClapMatches5", { bold = true, fg = "#83c1ba" })
hi(0, "ClapMatches6", { bold = true, fg = "#db9dbd" })
hi(0, "ClapNoMatchesFound", { bold = true, fg = "#ec8285" })
hi(0, "ClapPreview", { link = "Pmenu" })
hi(0, "ClapProviderAbout", { link = "ClapBlines" })
hi(0, "ClapProviderColon", { link = "ClapBlines" })
hi(0, "ClapProviderId", { bold = true, fg = "#d9ccaf" })
hi(0, "ClapSearchText", { link = "ClapFuzzyMatches" })
hi(0, "ClapSelected", { bold = true, fg = "#ec8285" })
hi(0, "ClapSpinner", { bg = "#2b353a", bold = true, fg = "#ed9d7a" })
hi(0, "CleverFDefaultLabel", { link = "Search" })
hi(0, "CmpItemAbbr", { link = "Fg" })
hi(0, "CmpItemAbbrDefault", { fg = "#d9ccaf" })
hi(0, "CmpItemAbbrDeprecated", { link = "Grey" })
hi(0, "CmpItemAbbrDeprecatedDefault", { fg = "#8a978e" })
hi(0, "CmpItemAbbrMatch", { bold = true, fg = "#abc684" })
hi(0, "CmpItemAbbrMatchDefault", { fg = "#d9ccaf" })
hi(0, "CmpItemAbbrMatchFuzzy", { bold = true, fg = "#abc684" })
hi(0, "CmpItemAbbrMatchFuzzyDefault", { fg = "#d9ccaf" })
hi(0, "CmpItemKind", { link = "Yellow" })
hi(0, "CmpItemKindArray", { link = "Aqua" })
hi(0, "CmpItemKindBoolean", { link = "Aqua" })
hi(0, "CmpItemKindClass", { link = "Yellow" })
hi(0, "CmpItemKindClassDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindColor", { link = "Aqua" })
hi(0, "CmpItemKindColorDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindConstant", { link = "Blue" })
hi(0, "CmpItemKindConstantDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindConstructor", { link = "Green" })
hi(0, "CmpItemKindConstructorDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindDefault", { fg = "#e1c283" })
hi(0, "CmpItemKindEnum", { link = "Yellow" })
hi(0, "CmpItemKindEnumDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindEnumMember", { link = "Purple" })
hi(0, "CmpItemKindEnumMemberDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindEvent", { link = "Orange" })
hi(0, "CmpItemKindEventDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindField", { link = "Green" })
hi(0, "CmpItemKindFieldDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindFile", { link = "Green" })
hi(0, "CmpItemKindFileDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindFolder", { link = "Aqua" })
hi(0, "CmpItemKindFolderDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindFunction", { link = "Green" })
hi(0, "CmpItemKindFunctionDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindInterface", { link = "Yellow" })
hi(0, "CmpItemKindInterfaceDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindKey", { link = "Red" })
hi(0, "CmpItemKindKeyword", { link = "Red" })
hi(0, "CmpItemKindKeywordDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindMethod", { link = "Green" })
hi(0, "CmpItemKindMethodDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindModule", { link = "Yellow" })
hi(0, "CmpItemKindModuleDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindNamespace", { link = "Purple" })
hi(0, "CmpItemKindNull", { link = "Aqua" })
hi(0, "CmpItemKindNumber", { link = "Aqua" })
hi(0, "CmpItemKindObject", { link = "Aqua" })
hi(0, "CmpItemKindOperator", { link = "Orange" })
hi(0, "CmpItemKindOperatorDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindPackage", { link = "Purple" })
hi(0, "CmpItemKindProperty", { link = "Blue" })
hi(0, "CmpItemKindPropertyDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindReference", { link = "Aqua" })
hi(0, "CmpItemKindReferenceDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindSnippet", { link = "Aqua" })
hi(0, "CmpItemKindSnippetDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindString", { link = "Aqua" })
hi(0, "CmpItemKindStruct", { link = "Yellow" })
hi(0, "CmpItemKindStructDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindText", { link = "Fg" })
hi(0, "CmpItemKindTextDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindTypeParameter", { link = "Yellow" })
hi(0, "CmpItemKindTypeParameterDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindUnit", { link = "Purple" })
hi(0, "CmpItemKindUnitDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindValue", { link = "Purple" })
hi(0, "CmpItemKindValueDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindVariable", { link = "Blue" })
hi(0, "CmpItemKindVariableDefault", { link = "CmpItemKind" })
hi(0, "CmpItemMenu", { link = "Fg" })
hi(0, "CmpItemMenuDefault", { fg = "#d9ccaf" })
hi(0, "CocCodeLens", { link = "Grey" })
hi(0, "CocDisabled", { link = "Grey" })
hi(0, "CocErrorFloat", { link = "ErrorFloat" })
hi(0, "CocErrorHighlight", { link = "ErrorText" })
hi(0, "CocErrorLine", { link = "ErrorLine" })
hi(0, "CocErrorSign", { link = "RedSign" })
hi(0, "CocErrorVirtualText", { link = "VirtualTextError" })
hi(0, "CocExplorerBufferBufname", { link = "Grey" })
hi(0, "CocExplorerBufferBufnr", { link = "Purple" })
hi(0, "CocExplorerBufferExpandIcon", { link = "Aqua" })
hi(0, "CocExplorerBufferFullpath", { link = "Grey" })
hi(0, "CocExplorerBufferModified", { link = "Yellow" })
hi(0, "CocExplorerBufferReadonly", { link = "Red" })
hi(0, "CocExplorerBufferRoot", { link = "Orange" })
hi(0, "CocExplorerDiagnosticError", { link = "Red" })
hi(0, "CocExplorerDiagnosticWarning", { link = "Yellow" })
hi(0, "CocExplorerFileDirectory", { link = "Green" })
hi(0, "CocExplorerFileExpandIcon", { link = "Aqua" })
hi(0, "CocExplorerFileFullpath", { link = "Grey" })
hi(0, "CocExplorerFileGitRootStaged", { link = "Purple" })
hi(0, "CocExplorerFileGitRootUnstaged", { link = "Yellow" })
hi(0, "CocExplorerFileGitStaged", { link = "Purple" })
hi(0, "CocExplorerFileGitUnstaged", { link = "Yellow" })
hi(0, "CocExplorerFileHidden", { link = "Grey" })
hi(0, "CocExplorerFileRoot", { link = "Orange" })
hi(0, "CocExplorerFileRootName", { link = "Green" })
hi(0, "CocExplorerFileSize", { link = "Blue" })
hi(0, "CocExplorerGitAdded", { link = "Green" })
hi(0, "CocExplorerGitContentChange", { link = "Fg" })
hi(0, "CocExplorerGitCopied", { link = "Fg" })
hi(0, "CocExplorerGitDeleted", { link = "Red" })
hi(0, "CocExplorerGitIgnored", { link = "Grey" })
hi(0, "CocExplorerGitMixed", { link = "Aqua" })
hi(0, "CocExplorerGitModified", { link = "Yellow" })
hi(0, "CocExplorerGitPathChange", { link = "Fg" })
hi(0, "CocExplorerGitRenamed", { link = "Purple" })
hi(0, "CocExplorerGitUnmerged", { link = "Orange" })
hi(0, "CocExplorerGitUnmodified", { link = "Fg" })
hi(0, "CocExplorerGitUntracked", { link = "Blue" })
hi(0, "CocExplorerHelpDescription", { link = "Grey" })
hi(0, "CocExplorerHelpHint", { link = "Grey" })
hi(0, "CocExplorerIndentLine", { link = "Conceal" })
hi(0, "CocExplorerTimeAccessed", { link = "Aqua" })
hi(0, "CocExplorerTimeCreated", { link = "Aqua" })
hi(0, "CocExplorerTimeModified", { link = "Aqua" })
hi(0, "CocFadeOut", { link = "Grey" })
hi(0, "CocFloatDividingLine", { link = "Grey" })
hi(0, "CocFloating", { link = "NormalFloat" })
hi(0, "CocGitAddedSign", { link = "GreenSign" })
hi(0, "CocGitChangeRemovedSign", { link = "PurpleSign" })
hi(0, "CocGitChangedSign", { link = "BlueSign" })
hi(0, "CocGitRemovedSign", { link = "RedSign" })
hi(0, "CocGitTopRemovedSign", { link = "RedSign" })
hi(0, "CocHighlightText", { link = "CurrentWord" })
hi(0, "CocHintFloat", { link = "HintFloat" })
hi(0, "CocHintHighlight", { link = "HintText" })
hi(0, "CocHintLine", { link = "HintLine" })
hi(0, "CocHintSign", { link = "GreenSign" })
hi(0, "CocHintVirtualText", { link = "VirtualTextHint" })
hi(0, "CocHoverRange", { bold = true, underline = true })
hi(0, "CocInfoFloat", { link = "InfoFloat" })
hi(0, "CocInfoHighlight", { link = "InfoText" })
hi(0, "CocInfoLine", { link = "InfoLine" })
hi(0, "CocInfoSign", { link = "BlueSign" })
hi(0, "CocInfoVirtualText", { link = "VirtualTextInfo" })
hi(0, "CocInlayHint", { link = "InlayHints" })
hi(0, "CocListMode", { link = "StatusLine" })
hi(0, "CocListPath", { link = "StatusLine" })
hi(0, "CocListsDesc", { link = "Grey" })
hi(0, "CocListsLine", { link = "Fg" })
hi(0, "CocMarkdownCode", { link = "Green" })
hi(0, "CocMarkdownHeader", { bold = true, fg = "#ed9d7a" })
hi(0, "CocMarkdownLink", { fg = "#abc684", underline = true })
hi(0, "CocMenuSel", { link = "PmenuSel" })
hi(0, "CocNotificationButton", { link = "PmenuSel" })
hi(0, "CocNotificationProgress", { link = "Green" })
hi(0, "CocPumMenu", { link = "Pmenu" })
hi(0, "CocPumSearch", { bold = true, fg = "#abc684" })
hi(0, "CocPumShortcut", { link = "Grey" })
hi(0, "CocPumVirtualText", { link = "Grey" })
hi(0, "CocSearch", { bold = true, fg = "#abc684" })
hi(0, "CocSelectedText", { link = "Orange" })
hi(0, "CocSemClass", { link = "TSType" })
hi(0, "CocSemEnum", { link = "TSType" })
hi(0, "CocSemEnumMember", { link = "TSVariableBuiltin" })
hi(0, "CocSemEvent", { link = "TSLabel" })
hi(0, "CocSemInterface", { link = "TSType" })
hi(0, "CocSemModifier", { link = "TSOperator" })
hi(0, "CocSemStruct", { link = "TSType" })
hi(0, "CocSemTypeParameter", { link = "TSType" })
hi(0, "CocSemVariable", { link = "TSVariable" })
hi(0, "CocSnippetVisual", { link = "DiffAdd" })
hi(0, "CocStrikeThrough", { link = "TSStrike" })
hi(0, "CocSymbolArray", { link = "Aqua" })
hi(0, "CocSymbolBoolean", { link = "Aqua" })
hi(0, "CocSymbolClass", { link = "Yellow" })
hi(0, "CocSymbolColor", { link = "Aqua" })
hi(0, "CocSymbolConstant", { link = "Blue" })
hi(0, "CocSymbolConstructor", { link = "Green" })
hi(0, "CocSymbolDefault", { link = "Aqua" })
hi(0, "CocSymbolEnum", { link = "Yellow" })
hi(0, "CocSymbolEnumMember", { link = "Purple" })
hi(0, "CocSymbolEvent", { link = "Orange" })
hi(0, "CocSymbolField", { link = "Green" })
hi(0, "CocSymbolFile", { link = "Green" })
hi(0, "CocSymbolFolder", { link = "Aqua" })
hi(0, "CocSymbolFunction", { link = "Green" })
hi(0, "CocSymbolInterface", { link = "Yellow" })
hi(0, "CocSymbolKey", { link = "Red" })
hi(0, "CocSymbolKeyword", { link = "Red" })
hi(0, "CocSymbolMethod", { link = "Green" })
hi(0, "CocSymbolModule", { link = "Yellow" })
hi(0, "CocSymbolNamespace", { link = "Purple" })
hi(0, "CocSymbolNull", { link = "Aqua" })
hi(0, "CocSymbolNumber", { link = "Aqua" })
hi(0, "CocSymbolObject", { link = "Aqua" })
hi(0, "CocSymbolOperator", { link = "Orange" })
hi(0, "CocSymbolPackage", { link = "Purple" })
hi(0, "CocSymbolProperty", { link = "Blue" })
hi(0, "CocSymbolReference", { link = "Aqua" })
hi(0, "CocSymbolSnippet", { link = "Aqua" })
hi(0, "CocSymbolString", { link = "Aqua" })
hi(0, "CocSymbolStruct", { link = "Yellow" })
hi(0, "CocSymbolText", { link = "Fg" })
hi(0, "CocSymbolTypeParameter", { link = "Yellow" })
hi(0, "CocSymbolUnit", { link = "Purple" })
hi(0, "CocSymbolValue", { link = "Purple" })
hi(0, "CocSymbolVariable", { link = "Blue" })
hi(0, "CocTreeDescription", { link = "Grey" })
hi(0, "CocTreeOpenClose", { link = "Aqua" })
hi(0, "CocWarningFloat", { link = "WarningFloat" })
hi(0, "CocWarningHighlight", { link = "WarningText" })
hi(0, "CocWarningLine", { link = "WarningLine" })
hi(0, "CocWarningSign", { link = "YellowSign" })
hi(0, "CocWarningVirtualText", { link = "VirtualTextWarning" })
hi(0, "CodeActionBorder", { link = "Purple" })
hi(0, "CodeiumSuggestion", { ctermfg = 244, fg = "#858585" })
hi(0, "ColorColumn", { bg = "#222c31" })
hi(0, "Comment", { fg = "#8a978e", italic = true })
hi(0, "Conceal", { fg = "#5b6863" })
hi(0, "Conditional", { fg = "#ec8285" })
hi(0, "Constant", { fg = "#87c696" })
hi(0, "CopilotSuggestion", { link = "Grey" })
hi(0, "CtrlPLinePre", { fg = "#4c575c" })
hi(0, "CtrlPMatch", { bold = true, fg = "#abc684" })
hi(0, "CtrlPMode1", { bg = "#353f45", bold = true, fg = "#83c1ba" })
hi(0, "CtrlPMode2", { bg = "#69a59d", bold = true, fg = "#333a40" })
hi(0, "CtrlPNoEntries", { link = "Red" })
hi(0, "CtrlPPrtBase", { fg = "#4c575c" })
hi(0, "CtrlPPrtCursor", { link = "Blue" })
hi(0, "CtrlPStats", { bg = "#353f45", bold = true, fg = "#8a978e" })
hi(0, "CurSearch", { link = "IncSearch" })
hi(0, "CurrentWord", { bold = true })
hi(0, "CurrentWordTwins", { link = "CurrentWord" })
hi(0, "Cursor", { bg = "#ce93d8", bold = true, fg = "#ffffff" })
hi(0, "CursorColumn", { bg = "#222c31" })
hi(0, "CursorInsert", { bg = "#ab47bc", fg = "#080808" })
hi(0, "CursorLine", { bg = "#222c31" })
hi(0, "CursorLineNr", { fg = "#8a978e" })
hi(0, "CursorWord0", { link = "CurrentWord" })
hi(0, "CursorWord1", { link = "CurrentWord" })
hi(0, "DapUIBreakpointsCurrentLine", { bold = true, fg = "#83c1ba" })
hi(0, "DapUIBreakpointsInfo", { link = "Green" })
hi(0, "DapUIBreakpointsPath", { link = "Blue" })
hi(0, "DapUIDecoration", { link = "Blue" })
hi(0, "DapUIFloatBorder", { link = "Blue" })
hi(0, "DapUILineNumber", { link = "Blue" })
hi(0, "DapUIModifiedValue", { bold = true, fg = "#83c1ba" })
hi(0, "DapUIPlayPause", { bg = "#2b353a", fg = "#abc684" })
hi(0, "DapUIRestart", { bg = "#2b353a", fg = "#abc684" })
hi(0, "DapUIScope", { link = "Blue" })
hi(0, "DapUISource", { link = "Purple" })
hi(0, "DapUIStepBack", { bg = "#2b353a", fg = "#83c1ba" })
hi(0, "DapUIStepInto", { bg = "#2b353a", fg = "#83c1ba" })
hi(0, "DapUIStepOut", { bg = "#2b353a", fg = "#83c1ba" })
hi(0, "DapUIStepOver", { bg = "#2b353a", fg = "#83c1ba" })
hi(0, "DapUIStop", { bg = "#2b353a", fg = "#ec8285" })
hi(0, "DapUIStoppedThread", { link = "Blue" })
hi(0, "DapUIThread", { link = "Green" })
hi(0, "DapUIType", { link = "Purple" })
hi(0, "DapUIUnavailable", { bg = "#2b353a", fg = "#8a978e" })
hi(0, "DapUIWatchesEmpty", { link = "Red" })
hi(0, "DapUIWatchesError", { link = "Red" })
hi(0, "DapUIWatchesValue", { link = "Green" })
hi(0, "DashboardCenter", { link = "Green" })
hi(0, "DashboardFooter", { link = "Orange" })
hi(0, "DashboardHeader", { link = "Yellow" })
hi(0, "DashboardShortcut", { link = "Red" })
hi(0, "Debug", { fg = "#ed9d7a" })
hi(0, "Define", { fg = "#db9dbd" })
hi(0, "Delimiter", { fg = "#d9ccaf" })
hi(0, "DiagnosticBorder", { link = "Orange" })
hi(0, "DiagnosticError", { fg = "#ec8285" })
hi(0, "DiagnosticFloatingError", { link = "ErrorFloat" })
hi(0, "DiagnosticFloatingHint", { link = "HintFloat" })
hi(0, "DiagnosticFloatingInfo", { link = "InfoFloat" })
hi(0, "DiagnosticFloatingWarn", { link = "WarningFloat" })
hi(0, "DiagnosticHint", { fg = "#abc684" })
hi(0, "DiagnosticInfo", { fg = "#83c1ba" })
hi(0, "DiagnosticOk", { ctermfg = 10, fg = "#cdf0d3" })
hi(0, "DiagnosticShowBorder", { link = "Orange" })
hi(0, "DiagnosticSignError", { link = "RedSign" })
hi(0, "DiagnosticSignHint", { link = "GreenSign" })
hi(0, "DiagnosticSignInfo", { link = "BlueSign" })
hi(0, "DiagnosticSignWarn", { link = "YellowSign" })
hi(0, "DiagnosticSource", { link = "Orange" })
hi(0, "DiagnosticUnderlineError", { fg = "#ec8285", sp = "#e67e80", undercurl = true })
hi(0, "DiagnosticUnderlineHint", { fg = "#abc684", sp = "#a7c080", undercurl = true })
hi(0, "DiagnosticUnderlineInfo", { fg = "#83c1ba", sp = "#7fbbb3", undercurl = true })
hi(0, "DiagnosticUnderlineWarn", { fg = "#e1c283", sp = "#dbbc7f", undercurl = true })
hi(0, "DiagnosticUnnecessary", { fg = "#8a978e" })
hi(0, "DiagnosticVirtualTextError", { link = "VirtualTextError" })
hi(0, "DiagnosticVirtualTextHint", { link = "VirtualTextHint" })
hi(0, "DiagnosticVirtualTextInfo", { link = "VirtualTextInfo" })
hi(0, "DiagnosticVirtualTextWarn", { link = "VirtualTextWarning" })
hi(0, "DiagnosticWarn", { fg = "#e1c283" })
hi(0, "DiffAdd", { bg = "#303d35" })
hi(0, "DiffChange", { bg = "#283e4a" })
hi(0, "DiffDelete", { bg = "#3e2e32" })
hi(0, "DiffText", { bg = "#69a59d", fg = "#333a40" })
hi(0, "Directory", { fg = "#abc684" })
hi(0, "DirvishArg", { link = "Yellow" })
hi(0, "DirvishPathTail", { link = "Aqua" })
hi(0, "DressingSelectIdx", { link = "Special" })
hi(0, "EasyMotionShade", { link = "Grey" })
hi(0, "EasyMotionTarget", { link = "Search" })
hi(0, "EndOfBuffer", { fg = "#545c62" })
hi(0, "Error", { fg = "#ec8285" })
hi(0, "ErrorFloat", { fg = "#ec8285" })
hi(0, "ErrorMsg", { bold = true, fg = "#ec8285", underline = true })
hi(0, "ErrorText", { sp = "#e67e80", undercurl = true })
hi(0, "Exception", { fg = "#ec8285" })
hi(0, "FSPrefix", { bg = "#1b2228", bold = true, fg = "#d9ccaf" })
hi(0, "FSSuffix", { fg = "#8a978e" })
hi(0, "FernBranchSymbol", { link = "FernBranchText" })
hi(0, "FernBranchText", { link = "Green" })
hi(0, "FernLeafSymbol", { link = "FernLeafText" })
hi(0, "FernLeafText", { link = "Fg" })
hi(0, "FernMarkedLine", { link = "Purple" })
hi(0, "FernMarkedText", { link = "Purple" })
hi(0, "FernRootSymbol", { link = "FernRootText" })
hi(0, "FernRootText", { link = "Orange" })
hi(0, "FernWindowSelectIndicator", { link = "TabLineSel" })
hi(0, "FernWindowSelectStatusLine", { link = "TabLine" })
hi(0, "Fg", { fg = "#d9ccaf" })
hi(0, "FlashBackdrop", { fg = "#8a978e" })
hi(0, "FlashLabel", { bold = true, fg = "#db9dbd", italic = true })
hi(0, "Float", { fg = "#db9dbd" })
hi(0, "FloatBorder", { bg = "#2b353a", fg = "#8a978e" })
hi(0, "FloatShadow", { bg = "#3c3f45", blend = 80, ctermbg = 0 })
hi(0, "FloatShadowThrough", { bg = "#3c3f45", blend = 100, ctermbg = 0 })
hi(0, "FloatTitle", { bg = "#2b353a", bold = true, fg = "#8a978e" })
hi(0, "FloatermBorder", { link = "Grey" })
hi(0, "FocusedSymbol", { link = "NormalFloat" })
hi(0, "FoldColumn", { fg = "#5b6863" })
hi(0, "Folded", { bg = "#222c31", fg = "#8a978e" })
hi(0, "Function", { fg = "#abc684" })
hi(0, "GitGutterAdd", { link = "GreenSign" })
hi(0, "GitGutterAddLine", { link = "DiffAdd" })
hi(0, "GitGutterAddLineNr", { link = "Green" })
hi(0, "GitGutterChange", { link = "BlueSign" })
hi(0, "GitGutterChangeDelete", { link = "PurpleSign" })
hi(0, "GitGutterChangeDeleteLine", { link = "DiffChange" })
hi(0, "GitGutterChangeDeleteLineNr", { link = "Purple" })
hi(0, "GitGutterChangeLine", { link = "DiffChange" })
hi(0, "GitGutterChangeLineNr", { link = "Blue" })
hi(0, "GitGutterDelete", { link = "RedSign" })
hi(0, "GitGutterDeleteLine", { link = "DiffDelete" })
hi(0, "GitGutterDeleteLineNr", { link = "Red" })
hi(0, "GitSignsAdd", { link = "GreenSign" })
hi(0, "GitSignsAddNr", { link = "Green" })
hi(0, "GitSignsChange", { link = "BlueSign" })
hi(0, "GitSignsChangeNr", { link = "Blue" })
hi(0, "GitSignsCurrentLineBlame", { link = "Grey" })
hi(0, "GitSignsDelete", { link = "RedSign" })
hi(0, "GitSignsDeleteLn", { link = "DiffDelete" })
hi(0, "GitSignsDeleteNr", { link = "Red" })
hi(0, "GitSignsStagedAdd", { fg = "#5d8064" })
hi(0, "GitSignsStagedAddCul", { fg = "#5d8064" })
hi(0, "GitSignsStagedAddLn", { bg = "#063f1a", fg = "#7c7d81" })
hi(0, "GitSignsStagedAddNr", { fg = "#5d8064" })
hi(0, "GitSignsStagedChange", { fg = "#4b8180" })
hi(0, "GitSignsStagedChangeCul", { fg = "#4b8180" })
hi(0, "GitSignsStagedChangeLn", { bg = "#3c3f45", fg = "#7c7d81" })
hi(0, "GitSignsStagedChangeNr", { fg = "#4b8180" })
hi(0, "GitSignsStagedChangedelete", { fg = "#4b8180" })
hi(0, "GitSignsStagedChangedeleteCul", { fg = "#4b8180" })
hi(0, "GitSignsStagedChangedeleteLn", { bg = "#3c3f45", fg = "#7c7d81" })
hi(0, "GitSignsStagedChangedeleteNr", { fg = "#4b8180" })
hi(0, "GitSignsStagedDelete", { fg = "#846460" })
hi(0, "GitSignsStagedDeleteCul", { fg = "#846460" })
hi(0, "GitSignsStagedDeleteNr", { fg = "#846460" })
hi(0, "GitSignsStagedTopdelete", { fg = "#846460" })
hi(0, "GitSignsStagedTopdeleteCul", { fg = "#846460" })
hi(0, "GitSignsStagedTopdeleteLn", { bg = "#3e2e32" })
hi(0, "GitSignsStagedTopdeleteNr", { fg = "#846460" })
hi(0, "GitSignsStagedUntracked", { fg = "#5d8064" })
hi(0, "GitSignsStagedUntrackedCul", { fg = "#5d8064" })
hi(0, "GitSignsStagedUntrackedLn", { bg = "#063f1a", fg = "#7c7d81" })
hi(0, "GitSignsStagedUntrackedNr", { fg = "#5d8064" })
hi(0, "GlyphPalette1", { fg = "#ec8285" })
hi(0, "GlyphPalette2", { fg = "#abc684" })
hi(0, "GlyphPalette3", { fg = "#e1c283" })
hi(0, "GlyphPalette4", { fg = "#83c1ba" })
hi(0, "GlyphPalette6", { fg = "#abc684" })
hi(0, "GlyphPalette7", { fg = "#d9ccaf" })
hi(0, "GlyphPalette9", { fg = "#ec8285" })
hi(0, "Green", { fg = "#abc684" })
hi(0, "GreenBold", { bold = true, fg = "#abc684" })
hi(0, "GreenItalic", { fg = "#abc684" })
hi(0, "GreenSign", { fg = "#abc684" })
hi(0, "Grey", { fg = "#8a978e" })
hi(0, "HighlightedyankRegion", { link = "Visual" })
hi(0, "HintFloat", { fg = "#abc684" })
hi(0, "HintText", { sp = "#a7c080", undercurl = true })
hi(0, "HopNextKey", { bold = true, fg = "#ed9d7a" })
hi(0, "HopNextKey1", { bold = true, fg = "#abc684" })
hi(0, "HopNextKey2", { link = "Green" })
hi(0, "HopUnmatched", { link = "Grey" })
hi(0, "HoverBorder", { link = "Green" })
hi(0, "IblIndent", { fg = "#545c62", nocombine = true })
hi(0, "IblScope", { fg = "#8a978e", nocombine = true })
hi(0, "IblWhitespace", { fg = "#545c62" })
hi(0, "Identifier", { fg = "#83c1ba" })
hi(0, "Ignore", { fg = "#8a978e" })
hi(0, "IlluminatedWordRead", { link = "CurrentWord" })
hi(0, "IlluminatedWordText", { link = "CurrentWord" })
hi(0, "IlluminatedWordWrite", { link = "CurrentWord" })
hi(0, "IncSearch", { bg = "#ce686b", fg = "#333a40" })
hi(0, "InclineNormalNC", { bg = "#2b353a", fg = "#8a978e" })
hi(0, "Include", { fg = "#db9dbd" })
hi(0, "IndentBlanklineChar", { link = "IblIndent" })
hi(0, "IndentBlanklineContextChar", { link = "IblScope" })
hi(0, "IndentBlanklineSpaceChar", { link = "IndentBlanklineChar" })
hi(0, "IndentBlanklineSpaceCharBlankline", { link = "IndentBlanklineChar" })
hi(0, "InfoFloat", { fg = "#83c1ba" })
hi(0, "InfoText", { sp = "#7fbbb3", undercurl = true })
hi(0, "InlayHints", { link = "LineNr" })
hi(0, "Keyword", { fg = "#ec8285" })
hi(0, "Label", { fg = "#ed9d7a" })
hi(0, "LeapBackdrop", { fg = "#8a978e" })
hi(0, "LeapLabel", { bold = true, fg = "#db9dbd" })
hi(0, "LeapMatch", { bg = "#c084a0", bold = true, fg = "#d9ccaf" })
hi(0, "LightspeedGreyWash", { link = "Grey" })
hi(0, "LightspeedLabel", { bold = true, fg = "#ec8285", underline = true })
hi(0, "LightspeedLabelDistant", { bold = true, fg = "#83c1ba", underline = true })
hi(0, "LightspeedMaskedChar", { link = "Purple" })
hi(0, "LightspeedPendingOpArea", { bg = "#91aa6b", fg = "#333a40" })
hi(0, "LightspeedShortcut", { bg = "#ce686b", bold = true, fg = "#333a40" })
hi(0, "LightspeedUnlabeledMatch", { bold = true, fg = "#d9ccaf" })
hi(0, "LineNr", { fg = "#5b6863" })
hi(0, "LineNrAbove", { fg = "#5b6863" })
hi(0, "LineNrBelow", { fg = "#5b6863" })
hi(0, "LspCodeLens", { link = "VirtualTextInfo" })
hi(0, "LspCodeLensSeparator", { link = "VirtualTextHint" })
hi(0, "LspDiagnosticsDefaultError", { link = "DiagnosticError" })
hi(0, "LspDiagnosticsDefaultHint", { link = "DiagnosticHint" })
hi(0, "LspDiagnosticsDefaultInformation", { link = "DiagnosticInfo" })
hi(0, "LspDiagnosticsDefaultWarning", { link = "DiagnosticWarn" })
hi(0, "LspDiagnosticsFloatingError", { link = "DiagnosticFloatingError" })
hi(0, "LspDiagnosticsFloatingHint", { link = "DiagnosticFloatingHint" })
hi(0, "LspDiagnosticsFloatingInformation", { link = "DiagnosticFloatingInfo" })
hi(0, "LspDiagnosticsFloatingWarning", { link = "DiagnosticFloatingWarn" })
hi(0, "LspDiagnosticsSignError", { link = "DiagnosticSignError" })
hi(0, "LspDiagnosticsSignHint", { link = "DiagnosticSignHint" })
hi(0, "LspDiagnosticsSignInformation", { link = "DiagnosticSignInfo" })
hi(0, "LspDiagnosticsSignWarning", { link = "DiagnosticSignWarn" })
hi(0, "LspDiagnosticsUnderlineError", { link = "DiagnosticUnderlineError" })
hi(0, "LspDiagnosticsUnderlineHint", { link = "DiagnosticUnderlineHint" })
hi(0, "LspDiagnosticsUnderlineInformation", { link = "DiagnosticUnderlineInfo" })
hi(0, "LspDiagnosticsUnderlineWarning", { link = "DiagnosticUnderlineWarn" })
hi(0, "LspDiagnosticsVirtualTextError", { link = "DiagnosticVirtualTextError" })
hi(0, "LspDiagnosticsVirtualTextHint", { link = "DiagnosticVirtualTextHint" })
hi(0, "LspDiagnosticsVirtualTextInformation", { link = "DiagnosticVirtualTextInfo" })
hi(0, "LspDiagnosticsVirtualTextWarning", { link = "DiagnosticVirtualTextWarn" })
hi(0, "LspErrorHighlight", { link = "ErrorText" })
hi(0, "LspErrorVirtualText", { link = "VirtualTextError" })
hi(0, "LspHintHighlight", { link = "HintText" })
hi(0, "LspHintVirtualText", { link = "VirtualTextHint" })
hi(0, "LspInformationHighlight", { link = "InfoText" })
hi(0, "LspInformationVirtualText", { link = "VirtualTextInfo" })
hi(0, "LspInlayHint", { link = "InlayHints" })
hi(0, "LspReferenceRead", { link = "CurrentWord" })
hi(0, "LspReferenceText", { link = "CurrentWord" })
hi(0, "LspReferenceWrite", { link = "CurrentWord" })
hi(0, "LspSemanticClass", { link = "TSType" })
hi(0, "LspSemanticComment", { link = "TSComment" })
hi(0, "LspSemanticEnum", { link = "TSType" })
hi(0, "LspSemanticEnumMember", { link = "TSVariableBuiltin" })
hi(0, "LspSemanticEvents", { link = "TSLabel" })
hi(0, "LspSemanticFunction", { link = "TSFunction" })
hi(0, "LspSemanticInterface", { link = "TSType" })
hi(0, "LspSemanticKeyword", { link = "TSKeyword" })
hi(0, "LspSemanticMethod", { link = "TSMethod" })
hi(0, "LspSemanticModifier", { link = "TSOperator" })
hi(0, "LspSemanticNumber", { link = "TSNumber" })
hi(0, "LspSemanticOperator", { link = "TSOperator" })
hi(0, "LspSemanticParameter", { link = "TSParameter" })
hi(0, "LspSemanticProperty", { link = "TSProperty" })
hi(0, "LspSemanticRegexp", { link = "TSStringRegex" })
hi(0, "LspSemanticString", { link = "TSString" })
hi(0, "LspSemanticStruct", { link = "TSType" })
hi(0, "LspSemanticType", { link = "TSType" })
hi(0, "LspSemanticTypeParameter", { link = "TSType" })
hi(0, "LspSemanticVariable", { link = "TSVariable" })
hi(0, "LspSignatureActiveParameter", { link = "Search" })
hi(0, "LspWarningHighlight", { link = "WarningText" })
hi(0, "LspWarningVirtualText", { link = "VirtualTextWarning" })
hi(0, "Macro", { fg = "#87c696" })
hi(0, "MasonHeader", { bg = "#91aa6b", bold = true, fg = "#333a40" })
hi(0, "MasonHeaderSecondary", { bg = "#cf8260", bold = true, fg = "#333a40" })
hi(0, "MasonHighlight", { link = "Green" })
hi(0, "MasonHighlightBlock", { bg = "#6daa7d", fg = "#333a40" })
hi(0, "MasonHighlightBlockBold", { bg = "#6daa7d", bold = true, fg = "#333a40" })
hi(0, "MasonHighlightBlockBoldSecondary", { bg = "#c5a669", bold = true, fg = "#333a40" })
hi(0, "MasonHighlightBlockSecondary", { bg = "#c5a669", fg = "#333a40" })
hi(0, "MasonHighlightSecondary", { link = "Yellow" })
hi(0, "MasonMuted", { fg = "#7f897d" })
hi(0, "MasonMutedBlock", { bg = "#666f64", fg = "#333a40" })
hi(0, "MatchParen", { bg = "#3c454b" })
hi(0, "MatchParenCur", { bold = true })
hi(0, "MatchWord", { underline = true })
hi(0, "MatchWordCur", { underline = true })
hi(0, "MiniAnimateCursor", { nocombine = true, reverse = true })
hi(0, "MiniAnimateNormalFloat", { link = "NormalFloat" })
hi(0, "MiniClueBorder", { link = "FloatBorder" })
hi(0, "MiniClueDescGroup", { link = "DiagnosticFloatingWarn" })
hi(0, "MiniClueDescSingle", { link = "NormalFloat" })
hi(0, "MiniClueNextKey", { link = "DiagnosticFloatingHint" })
hi(0, "MiniClueNextKeyWithPostkeys", { link = "DiagnosticFloatingError" })
hi(0, "MiniClueSeparator", { link = "DiagnosticFloatingInfo" })
hi(0, "MiniClueTitle", { link = "FloatTitle" })
hi(0, "MiniCompletionActiveParameter", { link = "LspSignatureActiveParameter" })
hi(0, "MiniCursorword", { link = "CurrentWord" })
hi(0, "MiniCursorwordCurrent", { link = "CurrentWord" })
hi(0, "MiniDepsChangeAdded", { link = "diffAdded" })
hi(0, "MiniDepsChangeRemoved", { link = "diffRemoved" })
hi(0, "MiniDepsHints", { link = "DiagnosticHint" })
hi(0, "MiniDepsInfo", { link = "DiagnosticInfo" })
hi(0, "MiniDepsMsgBreaking", { link = "DiagnosticWarn" })
hi(0, "MiniDepsPlaceholder", { link = "Comment" })
hi(0, "MiniDepsTitle", { link = "Title" })
hi(0, "MiniDepsTitleError", { link = "DiffDelete" })
hi(0, "MiniDepsTitleSame", { link = "DiffChange" })
hi(0, "MiniDepsTitleUpdate", { link = "DiffAdd" })
hi(0, "MiniDiffOverAdd", { link = "DiffAdd" })
hi(0, "MiniDiffOverChange", { link = "DiffText" })
hi(0, "MiniDiffOverContext", { link = "DiffChange" })
hi(0, "MiniDiffOverDelete", { link = "DiffDelete" })
hi(0, "MiniDiffSignAdd", { link = "GreenSign" })
hi(0, "MiniDiffSignChange", { link = "BlueSign" })
hi(0, "MiniDiffSignDelete", { link = "RedSign" })
hi(0, "MiniFilesBorder", { link = "FloatBorder" })
hi(0, "MiniFilesBorderModified", { link = "DiagnosticFloatingWarn" })
hi(0, "MiniFilesCursorLine", { link = "CursorLine" })
hi(0, "MiniFilesDirectory", { link = "Directory" })
hi(0, "MiniFilesFile", { fg = "#d9ccaf" })
hi(0, "MiniFilesNormal", { link = "NormalFloat" })
hi(0, "MiniFilesTitle", { link = "FloatTitle" })
hi(0, "MiniFilesTitleFocused", { bg = "#2b353a", bold = true, fg = "#abc684" })
hi(0, "MiniHipatternsFixme", { bg = "#ce686b", bold = true, fg = "#333a40" })
hi(0, "MiniHipatternsHack", { bg = "#c5a669", bold = true, fg = "#333a40" })
hi(0, "MiniHipatternsNote", { bg = "#69a59d", bold = true, fg = "#333a40" })
hi(0, "MiniHipatternsTodo", { bg = "#91aa6b", bold = true, fg = "#333a40" })
hi(0, "MiniIconsAzure", { fg = "#83c1ba" })
hi(0, "MiniIconsBlue", { fg = "#83c1ba" })
hi(0, "MiniIconsCyan", { fg = "#87c696" })
hi(0, "MiniIconsGreen", { fg = "#abc684" })
hi(0, "MiniIconsGrey", { fg = "#a1aea4" })
hi(0, "MiniIconsOrange", { fg = "#ed9d7a" })
hi(0, "MiniIconsPurple", { fg = "#db9dbd" })
hi(0, "MiniIconsRed", { fg = "#ec8285" })
hi(0, "MiniIconsYellow", { fg = "#e1c283" })
hi(0, "MiniIndentscopePrefix", { nocombine = true })
hi(0, "MiniIndentscopeSymbol", { link = "Grey" })
hi(0, "MiniJump", { link = "Search" })
hi(0, "MiniJump2dDim", { link = "Comment" })
hi(0, "MiniJump2dSpot", { bold = true, fg = "#ed9d7a", nocombine = true })
hi(0, "MiniJump2dSpotAhead", { fg = "#87c696", nocombine = true })
hi(0, "MiniJump2dSpotUnique", { bold = true, fg = "#e1c283", nocombine = true })
hi(0, "MiniMapNormal", { link = "NormalFloat" })
hi(0, "MiniMapSymbolCount", { link = "Special" })
hi(0, "MiniMapSymbolLine", { link = "Title" })
hi(0, "MiniMapSymbolView", { link = "Delimiter" })
hi(0, "MiniNotifyBorder", { link = "FloatBorder" })
hi(0, "MiniNotifyNormal", { link = "NormalFloat" })
hi(0, "MiniNotifyTitle", { link = "FloatTitle" })
hi(0, "MiniOperatorsExchangeFrom", { link = "IncSearch" })
hi(0, "MiniPickBorder", { link = "FloatBorder" })
hi(0, "MiniPickBorderBusy", { link = "DiagnosticFloatingWarn" })
hi(0, "MiniPickBorderText", { link = "FloatTitle" })
hi(0, "MiniPickHeader", { link = "DiagnosticFloatingHint" })
hi(0, "MiniPickIconDirectory", { link = "Directory" })
hi(0, "MiniPickIconFile", { link = "MiniPickNormal" })
hi(0, "MiniPickMatchCurrent", { link = "CursorLine" })
hi(0, "MiniPickMatchMarked", { link = "Visual" })
hi(0, "MiniPickMatchRanges", { link = "DiagnosticFloatingHint" })
hi(0, "MiniPickNormal", { link = "NormalFloat" })
hi(0, "MiniPickPreviewLine", { link = "CursorLine" })
hi(0, "MiniPickPreviewRegion", { link = "IncSearch" })
hi(0, "MiniPickPrompt", { bg = "#2b353a", fg = "#83c1ba" })
hi(0, "MiniStarterCurrent", { nocombine = true })
hi(0, "MiniStarterFooter", { link = "Orange" })
hi(0, "MiniStarterHeader", { link = "Yellow" })
hi(0, "MiniStarterInactive", { link = "Comment" })
hi(0, "MiniStarterItem", { link = "Normal" })
hi(0, "MiniStarterItemBullet", { link = "Grey" })
hi(0, "MiniStarterItemPrefix", { link = "Yellow" })
hi(0, "MiniStarterQuery", { link = "Blue" })
hi(0, "MiniStarterSection", { link = "Title" })
hi(0, "MiniStatuslineDevinfo", { bg = "#222c31", fg = "#a1aea4" })
hi(0, "MiniStatuslineFileinfo", { link = "MiniStatuslineDevinfo" })
hi(0, "MiniStatuslineFilename", { bg = "#222c31", fg = "#8a978e" })
hi(0, "MiniStatuslineInactive", { link = "Grey" })
hi(0, "MiniStatuslineModeCommand", { bg = "#6daa7d", bold = true, fg = "#333a40" })
hi(0, "MiniStatuslineModeInsert", { bg = "#bdb094", bold = true, fg = "#333a40" })
hi(0, "MiniStatuslineModeNormal", { bg = "#91aa6b", bold = true, fg = "#333a40" })
hi(0, "MiniStatuslineModeOther", { bg = "#c084a0", bold = true, fg = "#333a40" })
hi(0, "MiniStatuslineModeReplace", { bg = "#cf8260", bold = true, fg = "#333a40" })
hi(0, "MiniStatuslineModeVisual", { bg = "#ce686b", bold = true, fg = "#333a40" })
hi(0, "MiniSurround", { link = "IncSearch" })
hi(0, "MiniTablineCurrent", { bg = "#3c454b", fg = "#d9ccaf" })
hi(0, "MiniTablineFill", { link = "TabLineFill" })
hi(0, "MiniTablineHidden", { bg = "#2b353a", fg = "#8a978e" })
hi(0, "MiniTablineModifiedCurrent", { bg = "#3c454b", fg = "#83c1ba" })
hi(0, "MiniTablineModifiedHidden", { bg = "#2b353a", fg = "#8a978e" })
hi(0, "MiniTablineModifiedVisible", { bg = "#2b353a", fg = "#83c1ba" })
hi(0, "MiniTablineTabpagesection", { bg = "#91aa6b", bold = true, fg = "#333a40" })
hi(0, "MiniTablineVisible", { bg = "#2b353a", fg = "#d9ccaf" })
hi(0, "MiniTestEmphasis", { bold = true })
hi(0, "MiniTestFail", { bold = true, fg = "#ec8285" })
hi(0, "MiniTestPass", { bold = true, fg = "#abc684" })
hi(0, "MiniTrailspace", { bg = "#ce686b" })
hi(0, "ModeMsg", { bold = true, fg = "#d9ccaf" })
hi(0, "MoreMsg", { bold = true, fg = "#e1c283" })
hi(0, "MultiCursor", { link = "VM_Cursor" })
hi(0, "NERDTreeCWD", { link = "Aqua" })
hi(0, "NERDTreeClosable", { link = "Orange" })
hi(0, "NERDTreeDir", { link = "Green" })
hi(0, "NERDTreeDirSlash", { link = "Aqua" })
hi(0, "NERDTreeExecFile", { link = "Yellow" })
hi(0, "NERDTreeFile", { link = "Fg" })
hi(0, "NERDTreeFlags", { link = "Orange" })
hi(0, "NERDTreeHelp", { link = "LightGrey" })
hi(0, "NERDTreeLinkFile", { link = "Grey" })
hi(0, "NERDTreeLinkTarget", { link = "Green" })
hi(0, "NERDTreeOpenable", { link = "Orange" })
hi(0, "NERDTreeToggleOff", { link = "Red" })
hi(0, "NERDTreeToggleOn", { link = "Green" })
hi(0, "NERDTreeUp", { link = "Grey" })
hi(0, "NavicIconsArray", { fg = "#ed9d7a" })
hi(0, "NavicIconsBoolean", { fg = "#ed9d7a" })
hi(0, "NavicIconsClass", { fg = "#ed9d7a" })
hi(0, "NavicIconsConstant", { fg = "#db9dbd" })
hi(0, "NavicIconsConstructor", { fg = "#ed9d7a" })
hi(0, "NavicIconsEnum", { fg = "#ed9d7a" })
hi(0, "NavicIconsEnumMember", { fg = "#abc684" })
hi(0, "NavicIconsEvent", { fg = "#ed9d7a" })
hi(0, "NavicIconsField", { fg = "#abc684" })
hi(0, "NavicIconsFile", { fg = "#d9ccaf" })
hi(0, "NavicIconsFunction", { fg = "#83c1ba" })
hi(0, "NavicIconsInterface", { fg = "#ed9d7a" })
hi(0, "NavicIconsKey", { fg = "#db9dbd" })
hi(0, "NavicIconsKeyword", { fg = "#db9dbd" })
hi(0, "NavicIconsMethod", { fg = "#83c1ba" })
hi(0, "NavicIconsModule", { fg = "#e1c283" })
hi(0, "NavicIconsNamespace", { fg = "#d9ccaf" })
hi(0, "NavicIconsNull", { fg = "#ed9d7a" })
hi(0, "NavicIconsNumber", { fg = "#ed9d7a" })
hi(0, "NavicIconsObject", { fg = "#ed9d7a" })
hi(0, "NavicIconsOperator", { fg = "#d9ccaf" })
hi(0, "NavicIconsPackage", { fg = "#d9ccaf" })
hi(0, "NavicIconsProperty", { fg = "#abc684" })
hi(0, "NavicIconsString", { fg = "#abc684" })
hi(0, "NavicIconsStruct", { fg = "#ed9d7a" })
hi(0, "NavicIconsTypeParameter", { fg = "#abc684" })
hi(0, "NavicIconsVariable", { fg = "#db9dbd" })
hi(0, "NavicSeparator", { fg = "#d9ccaf" })
hi(0, "NavicText", { fg = "#d9ccaf" })
hi(0, "NeoTreeDimText", { link = "Grey" })
hi(0, "NeoTreeDirectoryIcon", { link = "Orange" })
hi(0, "NeoTreeEndOfBuffer", { bg = "#10161a", fg = "#292f33" })
hi(0, "NeoTreeGitAdded", { link = "Green" })
hi(0, "NeoTreeGitConflict", { link = "Yellow" })
hi(0, "NeoTreeGitDeleted", { link = "Red" })
hi(0, "NeoTreeGitIgnored", { link = "Grey" })
hi(0, "NeoTreeGitModified", { link = "Blue" })
hi(0, "NeoTreeGitStaged", { link = "Purple" })
hi(0, "NeoTreeGitUnstaged", { link = "Purple" })
hi(0, "NeoTreeGitUntracked", { link = "Fg" })
hi(0, "NeoTreeIndentMarker", { link = "NonText" })
hi(0, "NeoTreeNormal", { bg = "#10161a", fg = "#d9ccaf" })
hi(0, "NeoTreeNormalNC", { link = "NeoTreeNormal" })
hi(0, "NeoTreeRootName", { link = "Title" })
hi(0, "NeoTreeSignColumn", { link = "NeoTreeNormal" })
hi(0, "NeoTreeVertSplit", { bg = "#1b2228", fg = "#333a40" })
hi(0, "NeogitActiveItem", { bg = "#5db8b7", bold = true, fg = "#191b20" })
hi(0, "NeogitBranch", { link = "Green" })
hi(0, "NeogitBranchHead", { bold = true, fg = "#e6e8ef", underline = true })
hi(0, "NeogitChangeAdded", { link = "GreenBold" })
hi(0, "NeogitChangeBothModified", { link = "YellowBold" })
hi(0, "NeogitChangeCopied", { link = "AquaBold" })
hi(0, "NeogitChangeDeleted", { link = "RedBold" })
hi(0, "NeogitChangeModified", { link = "OrangeBold" })
hi(0, "NeogitChangeNewFile", { link = "GreenBold" })
hi(0, "NeogitChangeRenamed", { link = "BlueBold" })
hi(0, "NeogitChangeUnmerged", { bold = true, fg = "#c1c2c8", italic = true })
hi(0, "NeogitChangeUpdated", { link = "YellowBold" })
hi(0, "NeogitCommandCodeError", { link = "Red" })
hi(0, "NeogitCommandCodeNormal", { link = "Green" })
hi(0, "NeogitCommitViewHeader", { link = "Purple" })
hi(0, "NeogitDiffAdd", { link = "DiffAdd" })
hi(0, "NeogitDiffAddCursor", { bg = "#050507", fg = "#cdf0d3" })
hi(0, "NeogitDiffAddHighlight", { link = "DiffAdd" })
hi(0, "NeogitDiffAdditions", { fg = "#98d0a1" })
hi(0, "NeogitDiffContext", { bg = "#050507" })
hi(0, "NeogitDiffContextCursor", { bg = "#050507" })
hi(0, "NeogitDiffContextHighlight", { link = "CursorLine" })
hi(0, "NeogitDiffDelete", { link = "DiffDelete" })
hi(0, "NeogitDiffDeleteCursor", { bg = "#050507", fg = "#f0f0f0" })
hi(0, "NeogitDiffDeleteHighlight", { link = "DiffDelete" })
hi(0, "NeogitDiffDeletions", { fg = "#c9ccd1" })
hi(0, "NeogitDiffHeader", { bg = "#1c1e21", bold = true, fg = "#e6e8ef" })
hi(0, "NeogitDiffHeaderHighlight", { bg = "#1c1e21", bold = true, fg = "#c8f0f0" })
hi(0, "NeogitFilePath", { link = "Aqua" })
hi(0, "NeogitFloatHeader", { bg = "#020202", bold = true })
hi(0, "NeogitFloatHeaderHighlight", { bg = "#0f1217", bold = true, fg = "#e6e8ef" })
hi(0, "NeogitFold", { link = "FoldColumn" })
hi(0, "NeogitGraphAuthor", { fg = "#c8f0f0" })
hi(0, "NeogitGraphBlue", { fg = "#e6e8ef" })
hi(0, "NeogitGraphBoldBlue", { bold = true, fg = "#e6e8ef" })
hi(0, "NeogitGraphBoldCyan", { bold = true, fg = "#e6e8ef" })
hi(0, "NeogitGraphBoldGray", { bold = true, fg = "#78797b" })
hi(0, "NeogitGraphBoldGreen", { bold = true, fg = "#cdf0d3" })
hi(0, "NeogitGraphBoldOrange", { bold = true, fg = "#c8f0f0" })
hi(0, "NeogitGraphBoldPurple", { bold = true, fg = "#e6e8ef" })
hi(0, "NeogitGraphBoldRed", { bold = true, fg = "#f0f0f0" })
hi(0, "NeogitGraphBoldWhite", { bold = true, fg = "#f0f0f0" })
hi(0, "NeogitGraphBoldYellow", { bold = true, fg = "#e6e8ef" })
hi(0, "NeogitGraphCyan", { fg = "#e6e8ef" })
hi(0, "NeogitGraphGray", { fg = "#78797b" })
hi(0, "NeogitGraphGreen", { fg = "#cdf0d3" })
hi(0, "NeogitGraphOrange", { fg = "#c8f0f0" })
hi(0, "NeogitGraphPurple", { fg = "#e6e8ef" })
hi(0, "NeogitGraphRed", { fg = "#f0f0f0" })
hi(0, "NeogitGraphWhite", { fg = "#f0f0f0" })
hi(0, "NeogitGraphYellow", { fg = "#e6e8ef" })
hi(0, "NeogitHunkHeader", { link = "TabLineFill" })
hi(0, "NeogitHunkHeaderCursor", { bg = "#d0d1d8", bold = true, fg = "#191b20" })
hi(0, "NeogitHunkHeaderHighlight", { link = "TabLine" })
hi(0, "NeogitHunkMergeHeader", { bg = "#5f5f62", bold = true, fg = "#292a2f" })
hi(0, "NeogitHunkMergeHeaderCursor", { bg = "#a2a3aa", bold = true, fg = "#191b20" })
hi(0, "NeogitHunkMergeHeaderHighlight", { bg = "#a2a3aa", bold = true, fg = "#191b20" })
hi(0, "NeogitNotificationError", { link = "ErrorFloat" })
hi(0, "NeogitNotificationInfo", { link = "InfoFloat" })
hi(0, "NeogitNotificationWarning", { link = "WarningFloat" })
hi(0, "NeogitObjectId", { bold = true, fg = "#abc684", italic = true })
hi(0, "NeogitPopupActionKey", { fg = "#e6e8ef" })
hi(0, "NeogitPopupBold", { bold = true })
hi(0, "NeogitPopupConfigKey", { fg = "#e6e8ef" })
hi(0, "NeogitPopupOptionKey", { fg = "#e6e8ef" })
hi(0, "NeogitPopupSwitchKey", { fg = "#e6e8ef" })
hi(0, "NeogitRecentcommits", { link = "AquaBold" })
hi(0, "NeogitRemote", { link = "Purple" })
hi(0, "NeogitSectionHeader", { bold = true, fg = "#bfc0c6" })
hi(0, "NeogitStashes", { link = "BlueBold" })
hi(0, "NeogitTagDistance", { fg = "#e6e8ef" })
hi(0, "NeogitTagName", { fg = "#e6e8ef" })
hi(0, "NeogitUnmergedInto", { link = "PurpleItalic" })
hi(0, "NeogitUnpulledFrom", { bold = true, fg = "#bfc0c6" })
hi(0, "NeogitUnpushedTo", { link = "PurpleItalic" })
hi(0, "NeogitUnstagedchanges", { link = "Aqua" })
hi(0, "NeogitUntrackedfiles", { link = "PurpleItalic" })
hi(0, "NeomakeError", { link = "ErrorText" })
hi(0, "NeomakeErrorSign", { link = "RedSign" })
hi(0, "NeomakeInfo", { link = "InfoText" })
hi(0, "NeomakeInfoSign", { link = "BlueSign" })
hi(0, "NeomakeMessage", { link = "HintText" })
hi(0, "NeomakeMessageSign", { link = "AquaSign" })
hi(0, "NeomakeVirtualtextError", { link = "VirtualTextError" })
hi(0, "NeomakeVirtualtextInfo", { link = "VirtualTextInfo" })
hi(0, "NeomakeVirtualtextMessag", { link = "VirtualTextHint" })
hi(0, "NeomakeVirtualtextWarning", { link = "VirtualTextWarning" })
hi(0, "NeomakeWarning", { link = "WarningText" })
hi(0, "NeomakeWarningSign", { link = "YellowSign" })
hi(0, "NeoscrollHiddenCursor", { blend = 100, reverse = true })
hi(0, "NeotestAdapterName", { link = "Title" })
hi(0, "NeotestBorder", { fg = "#83c1ba" })
hi(0, "NeotestDir", { link = "Directory" })
hi(0, "NeotestExpandMarker", { fg = "#5b6863" })
hi(0, "NeotestFailed", { link = "RedSign" })
hi(0, "NeotestFile", { link = "Aqua" })
hi(0, "NeotestFocused", { fg = "#e1c283" })
hi(0, "NeotestIndent", { link = "NonText" })
hi(0, "NeotestMarked", { link = "Orange" })
hi(0, "NeotestNamespace", { link = "Purple" })
hi(0, "NeotestPassed", { link = "GreenSign" })
hi(0, "NeotestRunning", { link = "YellowSign" })
hi(0, "NeotestSkipped", { link = "BlueSign" })
hi(0, "NeotestTarget", { link = "Red" })
hi(0, "NeotestWinSelect", { fg = "#83c1ba" })
hi(0, "NoiceCompletionItemKindClass", { fg = "#ed9d7a" })
hi(0, "NoiceCompletionItemKindConstant", { fg = "#ec8285" })
hi(0, "NoiceCompletionItemKindConstructor", { fg = "#83c1ba" })
hi(0, "NoiceCompletionItemKindDefault", { fg = "#8a978e" })
hi(0, "NoiceCompletionItemKindEnum", { fg = "#ed9d7a" })
hi(0, "NoiceCompletionItemKindEnumMember", { fg = "#abc684" })
hi(0, "NoiceCompletionItemKindEvent", { fg = "#ed9d7a" })
hi(0, "NoiceCompletionItemKindField", { fg = "#abc684" })
hi(0, "NoiceCompletionItemKindFunction", { fg = "#83c1ba" })
hi(0, "NoiceCompletionItemKindInterface", { fg = "#ed9d7a" })
hi(0, "NoiceCompletionItemKindKeyword", { fg = "#87c696" })
hi(0, "NoiceCompletionItemKindMethod", { fg = "#83c1ba" })
hi(0, "NoiceCompletionItemKindModule", { fg = "#e1c283" })
hi(0, "NoiceCompletionItemKindOperator", { fg = "#abc684" })
hi(0, "NoiceCompletionItemKindProperty", { fg = "#abc684" })
hi(0, "NoiceCompletionItemKindReference", { fg = "#ec8285" })
hi(0, "NoiceCompletionItemKindSnippet", { fg = "#8a978e" })
hi(0, "NoiceCompletionItemKindStruct", { fg = "#ed9d7a" })
hi(0, "NoiceCompletionItemKindTypeParameter", { fg = "#abc684" })
hi(0, "NoiceCompletionItemKindUnit", { fg = "#ed9d7a" })
hi(0, "NoiceCompletionItemKindValue", { fg = "#ec8285" })
hi(0, "NoiceCompletionItemKindVariable", { fg = "#ec8285" })
hi(0, "NonText", { fg = "#545c62" })
hi(0, "Normal", { bg = "#1b2228", fg = "#d9ccaf" })
hi(0, "NormalFloat", { bg = "#2b353a", fg = "#d9ccaf" })
hi(0, "NormalNC", { bg = "#1b2228", fg = "#d9ccaf" })
hi(0, "NotifyBackground", { bg = "#1b2228" })
hi(0, "NotifyDEBUGBorder", { link = "Grey" })
hi(0, "NotifyDEBUGIcon", { link = "Grey" })
hi(0, "NotifyDEBUGTitle", { link = "Grey" })
hi(0, "NotifyERRORBorder", { link = "Red" })
hi(0, "NotifyERRORIcon", { link = "Red" })
hi(0, "NotifyERRORTitle", { link = "Red" })
hi(0, "NotifyINFOBody13", { bg = "#14161c", fg = "#27292c" })
hi(0, "NotifyINFOBody9", { bg = "#191b20", fg = "#101214" })
hi(0, "NotifyINFOBorder", { link = "Green" })
hi(0, "NotifyINFOBorder13", { fg = "#25282b" })
hi(0, "NotifyINFOBorder9", { fg = "#0e1212" })
hi(0, "NotifyINFOIcon", { link = "Green" })
hi(0, "NotifyINFOIcon13", { fg = "#25282b" })
hi(0, "NotifyINFOIcon9", { fg = "#0e1212" })
hi(0, "NotifyINFOTitle", { link = "Green" })
hi(0, "NotifyINFOTitle13", { fg = "#25282b" })
hi(0, "NotifyINFOTitle9", { fg = "#0e1212" })
hi(0, "NotifyTRACEBorder", { link = "Purple" })
hi(0, "NotifyTRACEIcon", { link = "Purple" })
hi(0, "NotifyTRACETitle", { link = "Purple" })
hi(0, "NotifyWARNBorder", { link = "Yellow" })
hi(0, "NotifyWARNIcon", { link = "Yellow" })
hi(0, "NotifyWARNTitle", { link = "Yellow" })
hi(0, "Number", { fg = "#db9dbd" })
hi(0, "NvimInternalError", { bg = "#d7130c", ctermbg = 9, ctermfg = 9, fg = "#ef3e2e" })
hi(0, "NvimSeparator", { bg = "#1b2228", fg = "#9a81cc" })
hi(0, "NvimTreeCursorLine", { bg = "#1b2228" })
hi(0, "NvimTreeDiagnosticErrorIcon", { link = "NvimTreeLspDiagnosticsError" })
hi(0, "NvimTreeDiagnosticHintIcon", { link = "NvimTreeLspDiagnosticsHint" })
hi(0, "NvimTreeDiagnosticInfoIcon", { link = "NvimTreeLspDiagnosticsInformation" })
hi(0, "NvimTreeDiagnosticWarnIcon", { link = "NvimTreeLspDiagnosticsWarning" })
hi(0, "NvimTreeEmptyFolderName", { link = "Green" })
hi(0, "NvimTreeEndOfBuffer", { bg = "#10161a", fg = "#292f33" })
hi(0, "NvimTreeExecFile", { link = "Fg" })
hi(0, "NvimTreeFolderIcon", { link = "Orange" })
hi(0, "NvimTreeFolderName", { link = "Green" })
hi(0, "NvimTreeGitDeleted", { link = "Red" })
hi(0, "NvimTreeGitDeletedIcon", { link = "NvimTreeGitDeleted" })
hi(0, "NvimTreeGitDirty", { link = "Yellow" })
hi(0, "NvimTreeGitDirtyIcon", { link = "NvimTreeGitDirty" })
hi(0, "NvimTreeGitMerge", { link = "Orange" })
hi(0, "NvimTreeGitMergeIcon", { link = "NvimTreeGitMerge" })
hi(0, "NvimTreeGitNew", { link = "Aqua" })
hi(0, "NvimTreeGitNewIcon", { link = "NvimTreeGitNew" })
hi(0, "NvimTreeGitRenamed", { link = "Purple" })
hi(0, "NvimTreeGitRenamedIcon", { link = "NvimTreeGitRenamed" })
hi(0, "NvimTreeGitStaged", { link = "Blue" })
hi(0, "NvimTreeGitStagedIcon", { link = "NvimTreeGitStaged" })
hi(0, "NvimTreeImageFile", { link = "Fg" })
hi(0, "NvimTreeIndentMarker", { link = "Grey" })
hi(0, "NvimTreeLspDiagnosticsError", { link = "RedSign" })
hi(0, "NvimTreeLspDiagnosticsHint", { link = "GreenSign" })
hi(0, "NvimTreeLspDiagnosticsInformation", { link = "BlueSign" })
hi(0, "NvimTreeLspDiagnosticsWarning", { link = "YellowSign" })
hi(0, "NvimTreeMarkdownFile", { link = "Fg" })
hi(0, "NvimTreeNormal", { bg = "#10161a", fg = "#d9ccaf" })
hi(0, "NvimTreeOpenedFile", { link = "Fg" })
hi(0, "NvimTreeOpenedFolderName", { link = "Green" })
hi(0, "NvimTreeOpenedHL", { link = "NvimTreeOpenedFile" })
hi(0, "NvimTreeRootFolder", { link = "Grey" })
hi(0, "NvimTreeSpecialFile", { link = "Fg" })
hi(0, "NvimTreeSymlink", { link = "Fg" })
hi(0, "NvimTreeVertSplit", { bg = "#1b2228", fg = "#333a40" })
hi(0, "NvimTreeWindowPicker", { bg = "#2c7db2", bold = true, ctermbg = 4, ctermfg = 15, fg = "#f0f0f0" })
hi(0, "OctoBlue", { link = "Blue" })
hi(0, "OctoBlueFloat", { bg = "#2b353a", fg = "#83c1ba" })
hi(0, "OctoBubbleBlue", { bg = "#69a59d", fg = "#333a40" })
hi(0, "OctoBubbleDelimiterBlue", { link = "Blue" })
hi(0, "OctoBubbleDelimiterGreen", { link = "Green" })
hi(0, "OctoBubbleDelimiterGrey", { link = "Grey" })
hi(0, "OctoBubbleDelimiterPurple", { link = "Purple" })
hi(0, "OctoBubbleDelimiterRed", { link = "Red" })
hi(0, "OctoBubbleDelimiterYellow", { link = "Yellow" })
hi(0, "OctoBubbleGreen", { bg = "#91aa6b", fg = "#333a40" })
hi(0, "OctoBubbleGrey", { bg = "#707d74", fg = "#333a40" })
hi(0, "OctoBubblePurple", { bg = "#c084a0", fg = "#333a40" })
hi(0, "OctoBubbleRed", { bg = "#ce686b", fg = "#333a40" })
hi(0, "OctoBubbleYellow", { bg = "#c5a669", fg = "#333a40" })
hi(0, "OctoGreen", { link = "Green" })
hi(0, "OctoGreenFloat", { bg = "#2b353a", fg = "#abc684" })
hi(0, "OctoGrey", { link = "Grey" })
hi(0, "OctoGreyFloat", { bg = "#2b353a", fg = "#8a978e" })
hi(0, "OctoPurple", { link = "Purple" })
hi(0, "OctoPurpleFloat", { bg = "#2b353a", fg = "#db9dbd" })
hi(0, "OctoRed", { link = "Red" })
hi(0, "OctoRedFloat", { bg = "#2b353a", fg = "#ec8285" })
hi(0, "OctoViewer", { bg = "#69a59d", fg = "#333a40" })
hi(0, "OctoYellow", { link = "Yellow" })
hi(0, "OctoYellowFloat", { bg = "#2b353a", fg = "#e1c283" })
hi(0, "Operator", { fg = "#ed9d7a" })
hi(0, "Orange", { fg = "#ed9d7a" })
hi(0, "OrangeBold", { bold = true, fg = "#ed9d7a" })
hi(0, "OrangeItalic", { fg = "#ed9d7a" })
hi(0, "OrangeSign", { fg = "#ed9d7a" })
hi(0, "Pmenu", { bg = "#2b353a", fg = "#d9ccaf" })
hi(0, "PmenuSbar", { bg = "#2b353a" })
hi(0, "PmenuSel", { bg = "#91aa6b", fg = "#333a40" })
hi(0, "PmenuThumb", { bg = "#666f64" })
hi(0, "PreCondit", { fg = "#db9dbd" })
hi(0, "PreProc", { fg = "#db9dbd" })
hi(0, "Purple", { fg = "#db9dbd" })
hi(0, "PurpleBold", { bold = true, fg = "#db9dbd" })
hi(0, "PurpleItalic", { fg = "#db9dbd" })
hi(0, "PurpleSign", { fg = "#db9dbd" })
hi(0, "Question", { fg = "#e1c283" })
hi(0, "QuickFixLine", { bold = true, fg = "#db9dbd" })
hi(0, "QuickScopePrimary", { fg = "#87c696", underline = true })
hi(0, "QuickScopeSecondary", { fg = "#83c1ba", underline = true })
hi(0, "QuickmenuBracket", { link = "Grey" })
hi(0, "QuickmenuHeader", { link = "Orange" })
hi(0, "QuickmenuHelp", { link = "Green" })
hi(0, "QuickmenuNumber", { link = "Red" })
hi(0, "QuickmenuOption", { link = "Green" })
hi(0, "QuickmenuSpecial", { link = "Purple" })
hi(0, "RainbowDelimiterBlue", { link = "Blue" })
hi(0, "RainbowDelimiterCyan", { link = "Aqua" })
hi(0, "RainbowDelimiterGreen", { link = "Green" })
hi(0, "RainbowDelimiterOrange", { link = "Orange" })
hi(0, "RainbowDelimiterRed", { link = "Red" })
hi(0, "RainbowDelimiterViolet", { link = "Purple" })
hi(0, "RainbowDelimiterYellow", { link = "Yellow" })
hi(0, "RainbowLevel0", { link = "Red" })
hi(0, "RainbowLevel1", { link = "Orange" })
hi(0, "RainbowLevel2", { link = "Yellow" })
hi(0, "RainbowLevel3", { link = "Green" })
hi(0, "RainbowLevel4", { link = "Aqua" })
hi(0, "RainbowLevel5", { link = "Blue" })
hi(0, "RainbowLevel6", { link = "Purple" })
hi(0, "RainbowLevel7", { link = "Yellow" })
hi(0, "RainbowLevel8", { link = "Green" })
hi(0, "Red", { fg = "#ec8285" })
hi(0, "RedBold", { bold = true, fg = "#ec8285" })
hi(0, "RedItalic", { fg = "#ec8285" })
hi(0, "RedSign", { fg = "#ec8285" })
hi(0, "RedrawDebugClear", { bg = "#534106", ctermbg = 11, ctermfg = 0 })
hi(0, "RedrawDebugComposed", { bg = "#063f1a", ctermbg = 10, ctermfg = 0 })
hi(0, "RedrawDebugRecompose", { bg = "#340405", ctermbg = 9, ctermfg = 0 })
hi(0, "Removed", { link = "Red" })
hi(0, "RenameBorder", { link = "Purple" })
hi(0, "Repeat", { fg = "#ec8285" })
hi(0, "SagaBorder", { link = "Blue" })
hi(0, "ScrollbarError", { fg = "#ec8285" })
hi(0, "ScrollbarErrorHandle", { bg = "#222c31", fg = "#ec8285" })
hi(0, "ScrollbarHandle", { bg = "#222c31" })
hi(0, "ScrollbarHint", { fg = "#83c1ba" })
hi(0, "ScrollbarHintHandle", { bg = "#222c31", fg = "#83c1ba" })
hi(0, "ScrollbarInfo", { fg = "#abc684" })
hi(0, "ScrollbarInfoHandle", { bg = "#222c31", fg = "#abc684" })
hi(0, "ScrollbarMisc", { fg = "#db9dbd" })
hi(0, "ScrollbarMiscHandle", { bg = "#222c31", fg = "#db9dbd" })
hi(0, "ScrollbarSearch", { fg = "#ed9d7a" })
hi(0, "ScrollbarSearchHandle", { bg = "#222c31", fg = "#ed9d7a" })
hi(0, "ScrollbarWarn", { fg = "#e1c283" })
hi(0, "ScrollbarWarnHandle", { bg = "#222c31", fg = "#e1c283" })
hi(0, "Search", { bg = "#91aa6b", fg = "#333a40" })
hi(0, "SignColumn", { fg = "#d9ccaf" })
hi(0, "SignatureMarkText", { link = "BlueSign" })
hi(0, "SignatureMarkerText", { link = "PurpleSign" })
hi(0, "SignifyLineAdd", { link = "DiffAdd" })
hi(0, "SignifyLineChange", { link = "DiffChange" })
hi(0, "SignifyLineChangeDelete", { link = "DiffChange" })
hi(0, "SignifyLineDelete", { link = "DiffDelete" })
hi(0, "SignifySignAdd", { link = "GreenSign" })
hi(0, "SignifySignChange", { link = "BlueSign" })
hi(0, "SignifySignChangeDelete", { link = "PurpleSign" })
hi(0, "SignifySignDelete", { link = "RedSign" })
hi(0, "SmoothCursor", { fg = "#f0dd96" })
hi(0, "SmoothCursorAqua", { fg = "#b7f0f0" })
hi(0, "SmoothCursorBlue", { fg = "#0131ef" })
hi(0, "SmoothCursorGreen", { fg = "#1d8319" })
hi(0, "SmoothCursorOrange", { fg = "#f0b263" })
hi(0, "SmoothCursorPurple", { fg = "#831983" })
hi(0, "SmoothCursorRed", { fg = "#ef3e2e" })
hi(0, "SmoothCursorYellow", { fg = "#f0f0f0" })
hi(0, "Sneak", { link = "Search" })
hi(0, "SneakLabel", { link = "Search" })
hi(0, "SneakLabelMask", { bg = "#cf8260", fg = "#ed9d7a" })
hi(0, "SneakScope", { link = "DiffText" })
hi(0, "Special", { fg = "#e1c283" })
hi(0, "SpecialChar", { fg = "#e1c283" })
hi(0, "SpecialComment", { fg = "#8a978e", italic = true })
hi(0, "SpecialKey", { fg = "#e1c283" })
hi(0, "SpellBad", { sp = "#e67e80", undercurl = true })
hi(0, "SpellCap", { sp = "#7fbbb3", undercurl = true })
hi(0, "SpellLocal", { sp = "#83c092", undercurl = true })
hi(0, "SpellRare", { sp = "#d699b6", undercurl = true })
hi(0, "StartifyBracket", { link = "Grey" })
hi(0, "StartifyFile", { link = "Fg" })
hi(0, "StartifyFooter", { link = "Grey" })
hi(0, "StartifyHeader", { link = "Aqua" })
hi(0, "StartifyNumber", { link = "Orange" })
hi(0, "StartifyPath", { link = "Green" })
hi(0, "StartifySection", { link = "Yellow" })
hi(0, "StartifySlash", { link = "Green" })
hi(0, "StartifySpecial", { link = "Grey" })
hi(0, "Statement", { fg = "#ec8285" })
hi(0, "StatusLine", { bg = "#2b353a", fg = "#8a978e" })
hi(0, "StatusLineNC", { bg = "#222c31", fg = "#8a978e" })
hi(0, "StatusLineTerm", { bg = "#222c31", fg = "#8a978e" })
hi(0, "StatusLineTermNC", { bg = "#1b2228", fg = "#8a978e" })
hi(0, "StorageClass", { fg = "#ed9d7a" })
hi(0, "String", { fg = "#abc684" })
hi(0, "Structure", { fg = "#ed9d7a" })
hi(0, "Substitute", { bg = "#c5a669", fg = "#333a40" })
hi(0, "SyntasticError", { link = "ErrorText" })
hi(0, "SyntasticErrorLine", { link = "ErrorLine" })
hi(0, "SyntasticErrorSign", { link = "RedSign" })
hi(0, "SyntasticWarning", { link = "WarningText" })
hi(0, "SyntasticWarningLine", { link = "WarningLine" })
hi(0, "SyntasticWarningSign", { link = "YellowSign" })
hi(0, "TSAnnotation", { link = "Purple" })
hi(0, "TSAttribute", { link = "Purple" })
hi(0, "TSBoolean", { link = "Purple" })
hi(0, "TSCharacter", { link = "Aqua" })
hi(0, "TSCharacterSpecial", { link = "SpecialChar" })
hi(0, "TSComment", { link = "Comment" })
hi(0, "TSConditional", { link = "Red" })
hi(0, "TSConstBuiltin", { link = "PurpleItalic" })
hi(0, "TSConstMacro", { link = "PurpleItalic" })
hi(0, "TSConstant", { link = "Constant" })
hi(0, "TSConstructor", { link = "Green" })
hi(0, "TSDanger", { bg = "#ce686b", bold = true, fg = "#333a40" })
hi(0, "TSDebug", { link = "Debug" })
hi(0, "TSDefine", { link = "Define" })
hi(0, "TSEmphasis", { italic = true })
hi(0, "TSEnvironment", { link = "Macro" })
hi(0, "TSEnvironmentName", { link = "Type" })
hi(0, "TSError", { link = "Error" })
hi(0, "TSException", { link = "Red" })
hi(0, "TSField", { link = "Blue" })
hi(0, "TSFloat", { link = "Purple" })
hi(0, "TSFuncBuiltin", { link = "Green" })
hi(0, "TSFuncMacro", { link = "Green" })
hi(0, "TSFunction", { link = "Green" })
hi(0, "TSFunctionCall", { link = "Green" })
hi(0, "TSInclude", { link = "Red" })
hi(0, "TSKeyword", { link = "Red" })
hi(0, "TSKeywordFunction", { link = "Red" })
hi(0, "TSKeywordOperator", { link = "Orange" })
hi(0, "TSKeywordReturn", { link = "Red" })
hi(0, "TSLabel", { link = "Orange" })
hi(0, "TSLiteral", { link = "String" })
hi(0, "TSMath", { link = "Blue" })
hi(0, "TSMethod", { link = "Green" })
hi(0, "TSMethodCall", { link = "Green" })
hi(0, "TSModuleInfoBad", { link = "Red" })
hi(0, "TSModuleInfoGood", { link = "Green" })
hi(0, "TSNamespace", { link = "YellowItalic" })
hi(0, "TSNone", { link = "Fg" })
hi(0, "TSNote", { bg = "#91aa6b", bold = true, fg = "#333a40" })
hi(0, "TSNumber", { link = "Purple" })
hi(0, "TSOperator", { link = "Orange" })
hi(0, "TSParameter", { link = "Fg" })
hi(0, "TSParameterReference", { link = "Fg" })
hi(0, "TSPreProc", { link = "PreProc" })
hi(0, "TSProperty", { link = "Blue" })
hi(0, "TSPunctBracket", { link = "Fg" })
hi(0, "TSPunctDelimiter", { link = "Grey" })
hi(0, "TSPunctSpecial", { link = "Blue" })
hi(0, "TSRainbowBlue", { link = "Blue" })
hi(0, "TSRainbowCyan", { link = "Aqua" })
hi(0, "TSRainbowGreen", { link = "Green" })
hi(0, "TSRainbowOrange", { link = "Orange" })
hi(0, "TSRainbowRed", { link = "Red" })
hi(0, "TSRainbowViolet", { link = "Purple" })
hi(0, "TSRainbowYellow", { link = "Yellow" })
hi(0, "TSRepeat", { link = "Red" })
hi(0, "TSStorageClass", { link = "Orange" })
hi(0, "TSStorageClassLifetime", { link = "Orange" })
hi(0, "TSStrike", { strikethrough = true })
hi(0, "TSString", { link = "Aqua" })
hi(0, "TSStringEscape", { link = "Green" })
hi(0, "TSStringRegex", { link = "Green" })
hi(0, "TSStringSpecial", { link = "SpecialChar" })
hi(0, "TSStrong", { bold = true })
hi(0, "TSSymbol", { link = "Aqua" })
hi(0, "TSTag", { link = "Orange" })
hi(0, "TSTagAttribute", { link = "Green" })
hi(0, "TSTagDelimiter", { link = "Green" })
hi(0, "TSText", { link = "Green" })
hi(0, "TSTextReference", { link = "Constant" })
hi(0, "TSTitle", { link = "Title" })
hi(0, "TSTodo", { link = "Todo" })
hi(0, "TSType", { link = "YellowItalic" })
hi(0, "TSTypeBuiltin", { link = "YellowItalic" })
hi(0, "TSTypeDefinition", { link = "YellowItalic" })
hi(0, "TSTypeQualifier", { link = "Orange" })
hi(0, "TSURI", { fg = "#83c1ba", underline = true })
hi(0, "TSUnderline", { underline = true })
hi(0, "TSVariable", { link = "Fg" })
hi(0, "TSVariableBuiltin", { link = "PurpleItalic" })
hi(0, "TSWarning", { bg = "#c5a669", bold = true, fg = "#333a40" })
hi(0, "TabLine", { bg = "#353f45", fg = "#a1aea4" })
hi(0, "TabLineFill", { bg = "#222c31", fg = "#8a978e" })
hi(0, "TabLineSel", { bg = "#91aa6b", fg = "#333a40" })
hi(0, "Tag", { fg = "#ed9d7a" })
hi(0, "TagbarFoldIcon", { link = "Green" })
hi(0, "TagbarKind", { link = "Red" })
hi(0, "TagbarNestedKind", { link = "Aqua" })
hi(0, "TagbarScope", { link = "Orange" })
hi(0, "TagbarSignature", { link = "Green" })
hi(0, "TagbarVisibilityPrivate", { link = "Red" })
hi(0, "TagbarVisibilityPublic", { link = "Blue" })
hi(0, "TelescopeBorder", { link = "Grey" })
hi(0, "TelescopeMatching", { bold = true, fg = "#abc684" })
hi(0, "TelescopePromptPrefix", { link = "Orange" })
hi(0, "TelescopeSelection", { link = "DiffAdd" })
hi(0, "TermCursor", { link = "Cursor" })
hi(0, "TermCursorNC", { link = "Cursor" })
hi(0, "Terminal", { bg = "#1b2228", fg = "#d9ccaf" })
hi(0, "Title", { bold = true, fg = "#ed9d7a" })
hi(0, "Todo", { bg = "#69a59d", bold = true, fg = "#333a40" })
hi(0, "TodoBgFIX", { bg = "#ce686b", bold = true, fg = "#333a40" })
hi(0, "TodoBgHACK", { bg = "#c5a669", bold = true, fg = "#333a40" })
hi(0, "TodoBgNOTE", { bg = "#91aa6b", bold = true, fg = "#333a40" })
hi(0, "TodoBgPERF", { bg = "#69a59d", bold = true, fg = "#333a40" })
hi(0, "TodoBgTEST", { bg = "#69a59d", bold = true, fg = "#333a40" })
hi(0, "TodoBgTODO", { bg = "#69a59d", bold = true, fg = "#333a40" })
hi(0, "TodoBgWARN", { bg = "#c5a669", bold = true, fg = "#333a40" })
hi(0, "TodoFgFIX", { fg = "#ec8285" })
hi(0, "TodoFgHACK", { fg = "#e1c283" })
hi(0, "TodoFgNOTE", { fg = "#abc684" })
hi(0, "TodoFgPERF", { fg = "#83c1ba" })
hi(0, "TodoFgTEST", { fg = "#83c1ba" })
hi(0, "TodoFgTODO", { fg = "#83c1ba" })
hi(0, "TodoFgWARN", { fg = "#e1c283" })
hi(0, "TodoSignFIX", { fg = "#ec8285" })
hi(0, "TodoSignHACK", { fg = "#e1c283" })
hi(0, "TodoSignNOTE", { fg = "#abc684" })
hi(0, "TodoSignPERF", { fg = "#83c1ba" })
hi(0, "TodoSignTEST", { fg = "#83c1ba" })
hi(0, "TodoSignTODO", { fg = "#83c1ba" })
hi(0, "TodoSignWARN", { fg = "#e1c283" })
hi(0, "ToolbarButton", { bg = "#91aa6b", fg = "#333a40" })
hi(0, "ToolbarLine", { bg = "#2b353a", fg = "#d9ccaf" })
hi(0, "TroubleCode", { link = "Grey" })
hi(0, "TroubleSource", { link = "Grey" })
hi(0, "TroubleText", { link = "Fg" })
hi(0, "Type", { fg = "#e1c283" })
hi(0, "Typedef", { fg = "#ec8285" })
hi(0, "UfoFoldedBg", { bg = "#222c31" })
hi(0, "UfoFoldedFg", { fg = "#d9ccaf" })
hi(0, "UndotreeBranch", { link = "Yellow" })
hi(0, "UndotreeCurrent", { link = "Aqua" })
hi(0, "UndotreeHead", { link = "Yellow" })
hi(0, "UndotreeNext", { link = "Blue" })
hi(0, "UndotreeNode", { link = "Orange" })
hi(0, "UndotreeNodeCurrent", { link = "Red" })
hi(0, "UndotreeSavedBig", { bold = true, fg = "#db9dbd" })
hi(0, "UndotreeSavedSmall", { link = "Purple" })
hi(0, "UndotreeSeq", { link = "Green" })
hi(0, "UndotreeTimeStamp", { link = "Grey" })
hi(0, "VertSplit", { fg = "#545c62" })
hi(0, "VirtualTextError", { link = "Red" })
hi(0, "VirtualTextHint", { link = "Green" })
hi(0, "VirtualTextInfo", { link = "Blue" })
hi(0, "VirtualTextWarning", { link = "Yellow" })
hi(0, "VistaBracket", { link = "Grey" })
hi(0, "VistaChildrenNr", { link = "Orange" })
hi(0, "VistaColon", { link = "Grey" })
hi(0, "VistaHeadNr", { link = "Fg" })
hi(0, "VistaIcon", { link = "Orange" })
hi(0, "VistaLineNr", { link = "Grey" })
hi(0, "VistaPrefix", { link = "Grey" })
hi(0, "VistaPrivate", { link = "Red" })
hi(0, "VistaProtected", { link = "Yellow" })
hi(0, "VistaPublic", { link = "Green" })
hi(0, "VistaScope", { link = "Red" })
hi(0, "VistaScopeKind", { link = "Yellow" })
hi(0, "VistaTag", { link = "Green" })
hi(0, "Visual", { bg = "#3f2835" })
hi(0, "VisualNOS", { bg = "#3f2835" })
hi(0, "WarningFloat", { fg = "#e1c283" })
hi(0, "WarningMsg", { bold = true, fg = "#e1c283" })
hi(0, "WarningText", { sp = "#dbbc7f", undercurl = true })
hi(0, "WhichKey", { link = "Red" })
hi(0, "WhichKeyDesc", { link = "Blue" })
hi(0, "WhichKeyFloat", { bg = "#222c31" })
hi(0, "WhichKeyGroup", { link = "Yellow" })
hi(0, "WhichKeyIconAzure", { link = "MiniIconsAzure" })
hi(0, "WhichKeyIconBlue", { link = "MiniIconsBlue" })
hi(0, "WhichKeyIconCyan", { link = "MiniIconsCyan" })
hi(0, "WhichKeyIconGreen", { link = "MiniIconsGreen" })
hi(0, "WhichKeyIconGrey", { link = "MiniIconsGrey" })
hi(0, "WhichKeyIconOrange", { link = "MiniIconsOrange" })
hi(0, "WhichKeyIconPurple", { link = "MiniIconsPurple" })
hi(0, "WhichKeyIconRed", { link = "MiniIconsRed" })
hi(0, "WhichKeyIconYellow", { link = "MiniIconsYellow" })
hi(0, "WhichKeySeparator", { link = "Green" })
hi(0, "WhichKeyValue", { fg = "#d9ccaf" })
hi(0, "Whitespace", { fg = "#545c62" })
hi(0, "WinBar", { bg = "#2b353a", bold = true, fg = "#8a978e" })
hi(0, "WinBarNC", { bg = "#222c31", fg = "#8a978e" })
hi(0, "WinSeparator", { link = "VertSplit" })
hi(0, "YankyPut", { link = "IncSearch" })
hi(0, "YankyYanked", { link = "IncSearch" })
hi(0, "YcmErrorLine", { link = "ErrorLine" })
hi(0, "YcmErrorSection", { link = "ErrorText" })
hi(0, "YcmErrorSign", { link = "RedSign" })
hi(0, "YcmInlayHint", { link = "InlayHints" })
hi(0, "YcmWarningLine", { link = "WarningLine" })
hi(0, "YcmWarningSection", { link = "WarningText" })
hi(0, "YcmWarningSign", { link = "YellowSign" })
hi(0, "Yellow", { fg = "#e1c283" })
hi(0, "YellowBold", { bold = true, fg = "#e1c283" })
hi(0, "YellowItalic", { fg = "#e1c283" })
hi(0, "YellowSign", { fg = "#e1c283" })
hi(0, "ZenBg", { bg = "#181f24", fg = "#30373d" })
hi(0, "agitDate", { link = "Green" })
hi(0, "agitDiffAdd", { link = "Green" })
hi(0, "agitDiffHeader", { link = "Purple" })
hi(0, "agitDiffRemove", { link = "Red" })
hi(0, "agitHead", { link = "Orange" })
hi(0, "agitRef", { link = "Aqua" })
hi(0, "agitRemote", { link = "Red" })
hi(0, "agitStatAdded", { link = "Green" })
hi(0, "agitStatFile", { link = "Blue" })
hi(0, "agitStatMessage", { link = "Orange" })
hi(0, "agitStatRemoved", { link = "Red" })
hi(0, "agitTag", { link = "Orange" })
hi(0, "agitTree", { link = "Grey" })
hi(0, "bashStatement", { link = "Orange" })
hi(0, "cssAttr", { link = "Orange" })
hi(0, "cssAttrComma", { link = "Fg" })
hi(0, "cssAttributeSelector", { link = "Aqua" })
hi(0, "cssBraces", { link = "Fg" })
hi(0, "cssClassName", { link = "RedItalic" })
hi(0, "cssClassNameDot", { link = "Red" })
hi(0, "cssColor", { link = "Green" })
hi(0, "cssCommonAttr", { link = "Yellow" })
hi(0, "cssFunctionName", { link = "Yellow" })
hi(0, "cssImportant", { link = "RedItalic" })
hi(0, "cssNoise", { link = "Grey" })
hi(0, "cssProp", { link = "Aqua" })
hi(0, "cssPseudoClass", { link = "Purple" })
hi(0, "cssPseudoClassFn", { link = "Green" })
hi(0, "cssPseudoClassId", { link = "Blue" })
hi(0, "cssSelectorOp", { link = "Orange" })
hi(0, "cssSelectorOp2", { link = "Orange" })
hi(0, "cssTagName", { link = "PurpleItalic" })
hi(0, "cssUnitDecorators", { link = "Orange" })
hi(0, "cssValueAngle", { link = "Green" })
hi(0, "cssValueFrequency", { link = "Green" })
hi(0, "cssValueInteger", { link = "Green" })
hi(0, "cssValueLength", { link = "Green" })
hi(0, "cssValueNumber", { link = "Green" })
hi(0, "cssValueTime", { link = "Green" })
hi(0, "cssVendor", { link = "Grey" })
hi(0, "debugBreakpoint", { bg = "#ce686b", fg = "#333a40" })
hi(0, "debugPC", { bg = "#91aa6b", fg = "#333a40" })
hi(0, "deniteInput", { bg = "#353f45", bold = true, fg = "#abc684" })
hi(0, "deniteMatchedChar", { bold = true, fg = "#abc684" })
hi(0, "deniteMatchedRange", { bold = true, fg = "#abc684", underline = true })
hi(0, "deniteSelectedLin", { link = "Green" })
hi(0, "deniteStatusLineNumber", { bg = "#353f45", fg = "#db9dbd" })
hi(0, "deniteStatusLinePath", { bg = "#353f45", fg = "#d9ccaf" })
hi(0, "diffAdded", { link = "Green" })
hi(0, "diffChanged", { link = "Blue" })
hi(0, "diffFile", { link = "Aqua" })
hi(0, "diffIndexLine", { link = "Purple" })
hi(0, "diffLine", { link = "Grey" })
hi(0, "diffNewFile", { link = "Orange" })
hi(0, "diffOldFile", { link = "Yellow" })
hi(0, "diffRemoved", { link = "Red" })
hi(0, "elixirBlockDefinition", { link = "RedItalic" })
hi(0, "elixirCallbackDefine", { link = "RedItalic" })
hi(0, "elixirDefine", { link = "RedItalic" })
hi(0, "elixirDelegateDefine", { link = "RedItalic" })
hi(0, "elixirExUnitMacro", { link = "RedItalic" })
hi(0, "elixirExceptionDefine", { link = "RedItalic" })
hi(0, "elixirGuard", { link = "RedItalic" })
hi(0, "elixirImplDefine", { link = "RedItalic" })
hi(0, "elixirInterpolation", { link = "Yellow" })
hi(0, "elixirInterpolationDelimiter", { link = "Yellow" })
hi(0, "elixirKeyword", { link = "Orange" })
hi(0, "elixirMacroDefine", { link = "RedItalic" })
hi(0, "elixirModuleDefine", { link = "PurpleItalic" })
hi(0, "elixirOverridableDefine", { link = "RedItalic" })
hi(0, "elixirPrivateDefine", { link = "RedItalic" })
hi(0, "elixirPrivateGuard", { link = "RedItalic" })
hi(0, "elixirPrivateMacroDefine", { link = "RedItalic" })
hi(0, "elixirPrivateRecordDefine", { link = "RedItalic" })
hi(0, "elixirProtocolDefine", { link = "RedItalic" })
hi(0, "elixirPseudoVariable", { link = "Purple" })
hi(0, "elixirRecordDefine", { link = "RedItalic" })
hi(0, "elixirSelf", { link = "Purple" })
hi(0, "elixirStringDelimiter", { link = "Green" })
hi(0, "elixirStructDefine", { link = "RedItalic" })
hi(0, "gitcommitArrow", { link = "Grey" })
hi(0, "gitcommitDiscarded", { link = "Grey" })
hi(0, "gitcommitFile", { link = "Green" })
hi(0, "gitcommitOnBranch", { link = "Grey" })
hi(0, "gitcommitSelected", { link = "Grey" })
hi(0, "gitcommitSummary", { link = "Green" })
hi(0, "gitcommitUnmerged", { link = "Grey" })
hi(0, "gitcommitUntracked", { link = "Grey" })
hi(0, "goBuiltins", { link = "Function" })
hi(0, "goComplexes", { link = "goType" })
hi(0, "goConst", { link = "goVar" })
hi(0, "goDeclType", { link = "OrangeItalic" })
hi(0, "goFloats", { link = "goType" })
hi(0, "goFunctionCall", { link = "Function" })
hi(0, "goImport", { link = "Include" })
hi(0, "goPackage", { link = "Define" })
hi(0, "goPredefinedIdentifiers", { link = "Aqua" })
hi(0, "goSignedInts", { link = "goType" })
hi(0, "goTSConstBuiltin", { link = "AquaItalic" })
hi(0, "goTSInclude", { link = "Purple" })
hi(0, "goTSNamespace", { link = "Fg" })
hi(0, "goType", { link = "Yellow" })
hi(0, "goUnsignedInts", { link = "goType" })
hi(0, "goVar", { link = "OrangeItalic" })
hi(0, "goVarArgs", { link = "Grey" })
hi(0, "goVarDefs", { link = "Aqua" })
hi(0, "healthError", { link = "Red" })
hi(0, "healthSuccess", { link = "Green" })
hi(0, "healthWarning", { link = "Yellow" })
hi(0, "helpCommand", { link = "Aqua" })
hi(0, "helpExample", { link = "Green" })
hi(0, "helpHeader", { bold = true, fg = "#ed9d7a" })
hi(0, "helpHeadline", { bold = true, fg = "#ec8285" })
hi(0, "helpHyperTextEntry", { bold = true, fg = "#e1c283" })
hi(0, "helpHyperTextJump", { link = "Yellow" })
hi(0, "helpNote", { bold = true, fg = "#db9dbd" })
hi(0, "helpSectionDelim", { link = "Grey" })
hi(0, "helpSpecial", { link = "Blue" })
hi(0, "helpURL", { fg = "#abc684", underline = true })
hi(0, "htmlArg", { link = "Aqua" })
hi(0, "htmlBold", { bold = true })
hi(0, "htmlBoldItalic", { bold = true, italic = true })
hi(0, "htmlBoldUnderline", { bold = true, underline = true })
hi(0, "htmlBoldUnderlineItalic", { bold = true, italic = true, underline = true })
hi(0, "htmlEndTag", { link = "Blue" })
hi(0, "htmlH1", { bold = true, fg = "#ec8285" })
hi(0, "htmlH2", { bold = true, fg = "#ed9d7a" })
hi(0, "htmlH3", { bold = true, fg = "#e1c283" })
hi(0, "htmlH4", { bold = true, fg = "#abc684" })
hi(0, "htmlH5", { bold = true, fg = "#83c1ba" })
hi(0, "htmlH6", { bold = true, fg = "#db9dbd" })
hi(0, "htmlItalic", { italic = true })
hi(0, "htmlLink", { underline = true })
hi(0, "htmlScriptTag", { link = "Purple" })
hi(0, "htmlSpecialTagName", { link = "RedItalic" })
hi(0, "htmlTSText", { link = "TSNone" })
hi(0, "htmlTag", { link = "Green" })
hi(0, "htmlTagN", { link = "OrangeItalic" })
hi(0, "htmlTagName", { link = "OrangeItalic" })
hi(0, "htmlUnderline", { underline = true })
hi(0, "htmlUnderlineItalic", { italic = true, underline = true })
hi(0, "illuminatedWord", { link = "CurrentWord" })
hi(0, "javaAnnotation", { link = "Blue" })
hi(0, "javaClassDecl", { link = "RedItalic" })
hi(0, "javaMethodDecl", { link = "RedItalic" })
hi(0, "javaParen", { link = "Fg" })
hi(0, "javaParen1", { link = "Fg" })
hi(0, "javaParen2", { link = "Fg" })
hi(0, "javaParen3", { link = "Fg" })
hi(0, "javaParen4", { link = "Fg" })
hi(0, "javaParen5", { link = "Fg" })
hi(0, "javaScriptFunction", { link = "Keyword" })
hi(0, "javaScriptGlobal", { link = "Purple" })
hi(0, "javaScriptIdentifier", { link = "Orange" })
hi(0, "javaScriptMember", { link = "Aqua" })
hi(0, "javaScriptMessage", { link = "Yellow" })
hi(0, "javaScriptNull", { link = "Aqua" })
hi(0, "javaScriptNumber", { link = "Number" })
hi(0, "javaScriptOperator", { link = "Orange" })
hi(0, "javaTypedef", { link = "Aqua" })
hi(0, "javaUserLabel", { link = "Purple" })
hi(0, "javaVarArg", { link = "Green" })
hi(0, "javascriptTSInclude", { link = "Purple" })
hi(0, "jsonKeyword", { link = "Green" })
hi(0, "jsonQuote", { link = "Grey" })
hi(0, "jsonString", { link = "Fg" })
hi(0, "jsonTSLabel", { link = "jsonKeyword" })
hi(0, "jsonTSString", { link = "jsonString" })
hi(0, "jsonTSStringEscape", { link = "SpecialChar" })
hi(0, "lCursor", { link = "Cursor" })
hi(0, "lessAmpersandChar", { link = "Orange" })
hi(0, "lessClass", { link = "RedItalic" })
hi(0, "lessFunction", { link = "Yellow" })
hi(0, "lessMixinChar", { link = "Grey" })
hi(0, "lessVariable", { link = "Blue" })
hi(0, "lspInlayHintsParameter", { link = "InlayHints" })
hi(0, "lspInlayHintsType", { link = "InlayHints" })
hi(0, "lspReference", { link = "CurrentWord" })
hi(0, "luaBraces", { link = "Fg" })
hi(0, "luaFunc", { link = "Green" })
hi(0, "luaFunction", { link = "Aqua" })
hi(0, "luaIn", { link = "RedItalic" })
hi(0, "luaTSConstructor", { link = "luaBraces" })
hi(0, "luaTable", { link = "Fg" })
hi(0, "lualine_a_buffers_active", { link = "lualine_a_normal" })
hi(0, "lualine_a_buffers_command", { bg = "#2b353a", fg = "#d9ccaf" })
hi(0, "lualine_a_buffers_inactive", { bg = "#2b353a", fg = "#d9ccaf" })
hi(0, "lualine_a_buffers_inactive_0", { link = "lualine_a_inactive" })
hi(0, "lualine_a_buffers_insert", { bg = "#2b353a", fg = "#d9ccaf" })
hi(0, "lualine_a_buffers_normal", { bg = "#2b353a", fg = "#d9ccaf" })
hi(0, "lualine_a_buffers_replace", { bg = "#2b353a", fg = "#d9ccaf" })
hi(0, "lualine_a_buffers_terminal", { bg = "#2b353a", fg = "#d9ccaf" })
hi(0, "lualine_a_buffers_visual", { bg = "#2b353a", fg = "#d9ccaf" })
hi(0, "lualine_a_filename_command", { bg = "#1b2228", fg = "#8a978e" })
hi(0, "lualine_a_filename_inactive", { bg = "#1b2228", fg = "#8a978e" })
hi(0, "lualine_a_filename_insert", { bg = "#1b2228", fg = "#8a978e" })
hi(0, "lualine_a_filename_normal", { bg = "#1b2228", fg = "#8a978e" })
hi(0, "lualine_a_filename_replace", { bg = "#1b2228", fg = "#8a978e" })
hi(0, "lualine_a_filename_terminal", { bg = "#1b2228", fg = "#8a978e" })
hi(0, "lualine_a_filename_visual", { bg = "#1b2228", fg = "#8a978e" })
hi(0, "lualine_a_inactive", { bg = "#1b2228", fg = "#8a978e" })
hi(0, "lualine_a_insert", { bg = "#9eb877", bold = true, fg = "#272e34" })
hi(0, "lualine_a_normal", { bg = "#dd7578", bold = true, fg = "#272e34" })
hi(0, "lualine_a_replace", { bg = "#dd7578", bold = true, fg = "#272e34" })
hi(0, "lualine_a_visual", { bg = "#3f2835", bold = true, fg = "#d9ccaf" })
hi(0, "lualine_b_filename", { bg = "#232b31", fg = "#d9ccaf" })
hi(0, "lualine_b_filename_command", { bg = "#232b31", fg = "#d9ccaf" })
hi(0, "lualine_b_filename_inactive", { bg = "#232b31", fg = "#d9ccaf" })
hi(0, "lualine_b_filename_insert", { bg = "#232b31", fg = "#d9ccaf" })
hi(0, "lualine_b_filename_normal", { bg = "#232b31", fg = "#d9ccaf" })
hi(0, "lualine_b_filename_replace", { bg = "#232b31", fg = "#d9ccaf" })
hi(0, "lualine_b_filename_terminal", { bg = "#232b31", fg = "#d9ccaf" })
hi(0, "lualine_b_filename_visual", { bg = "#232b31", fg = "#d9ccaf" })
hi(0, "lualine_b_inactive", { bg = "#1b2228", fg = "#8a978e" })
hi(0, "lualine_b_normal", { bg = "#232b31", fg = "#d9ccaf" })
hi(0, "lualine_c_branch", { bg = "#8ab36b", fg = "#333a40" })
hi(0, "lualine_c_branch_command", { bg = "#a0c980", fg = "#272e34" })
hi(0, "lualine_c_branch_inactive", { bg = "#a0c980", fg = "#272e34" })
hi(0, "lualine_c_branch_insert", { bg = "#a0c980", fg = "#272e34" })
hi(0, "lualine_c_branch_normal", { bg = "#a0c980", fg = "#272e34" })
hi(0, "lualine_c_branch_replace", { bg = "#a0c980", fg = "#272e34" })
hi(0, "lualine_c_branch_terminal", { bg = "#a0c980", fg = "#272e34" })
hi(0, "lualine_c_branch_visual", { bg = "#a0c980", fg = "#272e34" })
hi(0, "lualine_c_inactive", { bg = "#1b2228", fg = "#8a978e" })
hi(0, "lualine_c_normal", { bg = "#1b2228", fg = "#8a978e" })
hi(0, "lualine_transitional_lualine_a_buffers_active_to_lualine_a_buffers_inactive_0", { bg = "#1b2228", fg = "#ec8285" })
hi(0, "lualine_transitional_lualine_a_buffers_active_to_lualine_c_normal", { bg = "#1b2228", fg = "#ec8285" })
hi(0, "lualine_transitional_lualine_a_buffers_inactive_0_to_lualine_a_buffers_active", { bg = "#dd7578", fg = "#272e34" })
hi(0, "lualine_transitional_lualine_a_normal_to_lualine_b_filename", { bg = "#232b31", fg = "#ec8285" })
hi(0, "lualine_transitional_lualine_b_filename_to_lualine_c_branch", { bg = "#8ab36b", fg = "#3b4349" })
hi(0, "lualine_transitional_lualine_b_filename_to_lualine_c_normal", { bg = "#1b2228", fg = "#2f373d" })
hi(0, "lualine_transitional_lualine_c_branch_to_lualine_c_normal", { bg = "#1b2228", fg = "#a4cf84" })
hi(0, "lualine_transitional_lualine_z_tabs_active_to_lualine_c_normal", { bg = "#1b2228", fg = "#ec8285" })
hi(0, "lualine_z_tabs_active", { link = "lualine_a_normal" })
hi(0, "lualine_z_tabs_command", { bg = "#3f2835", fg = "#272e34" })
hi(0, "lualine_z_tabs_inactive", { bg = "#3f2835", fg = "#272e34" })
hi(0, "lualine_z_tabs_inactive_0", { link = "lualine_a_inactive" })
hi(0, "lualine_z_tabs_insert", { bg = "#3f2835", fg = "#272e34" })
hi(0, "lualine_z_tabs_normal", { bg = "#3f2835", fg = "#272e34" })
hi(0, "lualine_z_tabs_replace", { bg = "#3f2835", fg = "#272e34" })
hi(0, "lualine_z_tabs_terminal", { bg = "#3f2835", fg = "#272e34" })
hi(0, "lualine_z_tabs_visual", { bg = "#3f2835", fg = "#272e34" })
hi(0, "makeCommands", { link = "Orange" })
hi(0, "makeIdent", { link = "Aqua" })
hi(0, "makeSpecTarget", { link = "Yellow" })
hi(0, "makeTarget", { link = "Blue" })
hi(0, "markdownBlockquote", { link = "Grey" })
hi(0, "markdownBold", { bold = true })
hi(0, "markdownBoldDelimiter", { link = "Grey" })
hi(0, "markdownCode", { link = "Green" })
hi(0, "markdownCodeBlock", { link = "Aqua" })
hi(0, "markdownCodeDelimiter", { link = "Aqua" })
hi(0, "markdownH1", { bold = true, fg = "#ec8285" })
hi(0, "markdownH2", { bold = true, fg = "#ed9d7a" })
hi(0, "markdownH3", { bold = true, fg = "#e1c283" })
hi(0, "markdownH4", { bold = true, fg = "#abc684" })
hi(0, "markdownH5", { bold = true, fg = "#83c1ba" })
hi(0, "markdownH6", { bold = true, fg = "#db9dbd" })
hi(0, "markdownHeadingDelimiter", { link = "Grey" })
hi(0, "markdownHeadingRule", { link = "Grey" })
hi(0, "markdownId", { link = "Yellow" })
hi(0, "markdownIdDeclaration", { link = "markdownLinkText" })
hi(0, "markdownItalic", { italic = true })
hi(0, "markdownItalicDelimiter", { fg = "#8a978e", italic = true })
hi(0, "markdownLinkDelimiter", { link = "Grey" })
hi(0, "markdownLinkText", { link = "Purple" })
hi(0, "markdownLinkTextDelimiter", { link = "Grey" })
hi(0, "markdownListMarker", { link = "Red" })
hi(0, "markdownOrderedListMarker", { link = "Red" })
hi(0, "markdownRule", { link = "Purple" })
hi(0, "markdownUrl", { link = "TSURI" })
hi(0, "markdownUrlDelimiter", { link = "Grey" })
hi(0, "markdownUrlTitleDelimiter", { link = "Green" })
hi(0, "netrwClassify", { link = "Green" })
hi(0, "netrwCmdSep", { link = "Grey" })
hi(0, "netrwComment", { link = "Grey" })
hi(0, "netrwDir", { link = "Green" })
hi(0, "netrwExe", { link = "Yellow" })
hi(0, "netrwHelpCmd", { link = "Blue" })
hi(0, "netrwLink", { link = "Grey" })
hi(0, "netrwList", { link = "Aqua" })
hi(0, "netrwSymLink", { link = "Fg" })
hi(0, "netrwVersion", { link = "Orange" })
hi(0, "packerFail", { link = "Red" })
hi(0, "packerHash", { link = "Green" })
hi(0, "packerOutput", { link = "Orange" })
hi(0, "packerPackageName", { link = "Green" })
hi(0, "packerPackageNotLoaded", { link = "Grey" })
hi(0, "packerRelDate", { link = "Grey" })
hi(0, "packerStatusFail", { link = "Fg" })
hi(0, "packerStatusSuccess", { link = "Fg" })
hi(0, "packerString", { link = "Yellow" })
hi(0, "packerSuccess", { link = "Aqua" })
hi(0, "packerTimeHigh", { link = "Red" })
hi(0, "packerTimeLow", { link = "Green" })
hi(0, "packerTimeMedium", { link = "Yellow" })
hi(0, "packerTimeTrivial", { link = "Blue" })
hi(0, "packerWorking", { link = "Yellow" })
hi(0, "phpComparison", { link = "Orange" })
hi(0, "phpDefine", { link = "OrangeItalic" })
hi(0, "phpInterpSimpleCurly", { link = "Yellow" })
hi(0, "phpMemberSelector", { link = "Green" })
hi(0, "phpMethodsVar", { link = "Aqua" })
hi(0, "phpSpecialFunction", { link = "Green" })
hi(0, "phpStructure", { link = "RedItalic" })
hi(0, "phpVarSelector", { link = "Blue" })
hi(0, "plug1", { bold = true, fg = "#ed9d7a" })
hi(0, "plug2", { link = "Green" })
hi(0, "plugBracket", { link = "Grey" })
hi(0, "plugDash", { link = "Orange" })
hi(0, "plugDeleted", { link = "Grey" })
hi(0, "plugEdge", { link = "Yellow" })
hi(0, "plugError", { link = "Red" })
hi(0, "plugH2", { link = "Orange" })
hi(0, "plugMessage", { link = "Orange" })
hi(0, "plugName", { link = "Aqua" })
hi(0, "plugNotLoaded", { link = "Grey" })
hi(0, "plugNumber", { bold = true, fg = "#e1c283" })
hi(0, "plugRelDate", { link = "Grey" })
hi(0, "plugSha", { link = "Green" })
hi(0, "plugStar", { link = "Red" })
hi(0, "plugUpdate", { link = "Blue" })
hi(0, "pythonBuiltin", { link = "Yellow" })
hi(0, "pythonDecoratorName", { link = "Blue" })
hi(0, "pythonExceptions", { link = "Purple" })
hi(0, "rainbowcol1", { link = "Red" })
hi(0, "rainbowcol2", { link = "Orange" })
hi(0, "rainbowcol3", { link = "Yellow" })
hi(0, "rainbowcol4", { link = "Green" })
hi(0, "rainbowcol5", { link = "Aqua" })
hi(0, "rainbowcol6", { link = "Blue" })
hi(0, "rainbowcol7", { link = "Purple" })
hi(0, "rubyAccess", { link = "Orange" })
hi(0, "rubyAttribute", { link = "Yellow" })
hi(0, "rubyBlockParameterList", { link = "Blue" })
hi(0, "rubyDefine", { link = "RedItalic" })
hi(0, "rubyInterpolation", { link = "Yellow" })
hi(0, "rubyInterpolationDelimiter", { link = "Yellow" })
hi(0, "rubyKeywordAsMethod", { link = "Green" })
hi(0, "rubyMacro", { link = "RedItalic" })
hi(0, "rubyModuleName", { link = "Purple" })
hi(0, "rubyStringDelimiter", { link = "Green" })
hi(0, "rustAssert", { link = "Aqua" })
hi(0, "rustDeriveTrait", { link = "PurpleItalic" })
hi(0, "rustEnumVariant", { link = "Purple" })
hi(0, "rustIdentifier", { link = "Purple" })
hi(0, "rustMacroVariable", { link = "Blue" })
hi(0, "rustModPath", { link = "Orange" })
hi(0, "rustModPathSep", { link = "Grey" })
hi(0, "rustPanic", { link = "Aqua" })
hi(0, "rustPubScopeCrate", { link = "PurpleItalic" })
hi(0, "rustSelf", { link = "Blue" })
hi(0, "rustStructure", { link = "Orange" })
hi(0, "rustSuper", { link = "Blue" })
hi(0, "sassAmpersand", { link = "Orange" })
hi(0, "sassClass", { link = "RedItalic" })
hi(0, "sassClassChar", { link = "Red" })
hi(0, "sassControl", { link = "RedItalic" })
hi(0, "sassCssAttribute", { link = "Yellow" })
hi(0, "sassFor", { link = "RedItalic" })
hi(0, "sassFunction", { link = "Yellow" })
hi(0, "sassFunctionName", { link = "Green" })
hi(0, "sassInterpolationDelimiter", { link = "Green" })
hi(0, "sassMixinName", { link = "Orange" })
hi(0, "sassMixing", { link = "PurpleItalic" })
hi(0, "sassProperty", { link = "Aqua" })
hi(0, "scssAttribute", { link = "Orange" })
hi(0, "scssBoolean", { link = "Purple" })
hi(0, "scssForKeyword", { link = "PurpleItalic" })
hi(0, "scssFunctionName", { link = "Yellow" })
hi(0, "scssInterpolationDelimiter", { link = "Green" })
hi(0, "scssMixinName", { link = "Yellow" })
hi(0, "scssNull", { link = "Purple" })
hi(0, "scssSelectorChar", { link = "Red" })
hi(0, "scssSelectorName", { link = "RedItalic" })
hi(0, "scssVariableAssignment", { link = "Grey" })
hi(0, "scssVariableValue", { link = "Green" })
hi(0, "shCmdSubRegion", { link = "Green" })
hi(0, "shCommandSub", { link = "Orange" })
hi(0, "shFunction", { link = "Green" })
hi(0, "shFunctionKey", { link = "RedItalic" })
hi(0, "shOperator", { link = "Orange" })
hi(0, "shOption", { link = "Aqua" })
hi(0, "shQuote", { link = "Green" })
hi(0, "shRange", { link = "Fg" })
hi(0, "shSet", { link = "Orange" })
hi(0, "shSetList", { link = "Blue" })
hi(0, "shSnglCase", { link = "Orange" })
hi(0, "shTestOpr", { link = "Orange" })
hi(0, "shVarAssign", { link = "Orange" })
hi(0, "shVariable", { link = "Blue" })
hi(0, "tomlKey", { link = "Green" })
hi(0, "tomlString", { link = "Fg" })
hi(0, "tomlTSProperty", { link = "tomlKey" })
hi(0, "tomlTSString", { link = "tomlString" })
hi(0, "tsxTSConstructor", { link = "TSType" })
hi(0, "typescriptTSInclude", { link = "Purple" })
hi(0, "vimAutoCmdSfxList", { link = "Aqua" })
hi(0, "vimContinue", { link = "Grey" })
hi(0, "vimFuncName", { link = "Green" })
hi(0, "vimFunction", { link = "Green" })
hi(0, "vimHiBang", { link = "Orange" })
hi(0, "vimIsCommand", { link = "Fg" })
hi(0, "vimLet", { link = "Orange" })
hi(0, "vimMap", { link = "PurpleItalic" })
hi(0, "vimMapLhs", { link = "Green" })
hi(0, "vimMapRhs", { link = "Green" })
hi(0, "vimNotation", { link = "Aqua" })
hi(0, "vimOption", { link = "Aqua" })
hi(0, "vimSet", { link = "Yellow" })
hi(0, "vimSetEqual", { link = "Yellow" })
hi(0, "vimSetSep", { link = "Grey" })
hi(0, "vimSynType", { link = "Orange" })
hi(0, "vimUserAttrb", { link = "Green" })
hi(0, "vimUserAttrbKey", { link = "Yellow" })
hi(0, "vimUserFunc", { link = "Green" })
hi(0, "xmlAttrib", { link = "Aqua" })
hi(0, "xmlCdataCdata", { link = "Purple" })
hi(0, "xmlCdataStart", { link = "Grey" })
hi(0, "xmlDocTypeDecl", { link = "Grey" })
hi(0, "xmlDocTypeKeyword", { link = "PurpleItalic" })
hi(0, "xmlEndTag", { link = "Blue" })
hi(0, "xmlEntity", { link = "Red" })
hi(0, "xmlEntityPunct", { link = "Red" })
hi(0, "xmlEqual", { link = "Orange" })
hi(0, "xmlTag", { link = "Green" })
hi(0, "xmlTagName", { link = "OrangeItalic" })
hi(0, "yamlBlockMappingKey", { link = "Green" })
hi(0, "yamlConstant", { link = "OrangeItalic" })
hi(0, "yamlKeyValueDelimiter", { link = "Grey" })
hi(0, "yamlString", { link = "Fg" })
hi(0, "yamlTSBoolean", { link = "yamlConstant" })
hi(0, "yamlTSConstBuiltin", { link = "yamlConstant" })
hi(0, "yamlTSField", { link = "yamlBlockMappingKey" })
hi(0, "yamlTSString", { link = "yamlString" })
hi(0, "yamlTSStringEscape", { link = "SpecialChar" })
hi(0, "zshDeref", { link = "Blue" })
hi(0, "zshFunction", { link = "Green" })
hi(0, "zshOptStart", { link = "PurpleItalic" })
hi(0, "zshOption", { link = "Blue" })
hi(0, "zshSubst", { link = "Yellow" })
hi(0, "zshTypes", { link = "Orange" })
hi(0, "zshVariableDef", { link = "Blue" })

-- Terminal colors
local g = vim.g

g.terminal_color_0 = "#d3c6aa"
g.terminal_color_1 = "#e67e80"
g.terminal_color_2 = "#a7c080"
g.terminal_color_3 = "#dbbc7f"
g.terminal_color_4 = "#7fbbb3"
g.terminal_color_5 = "#d699b6"
g.terminal_color_6 = "#83c092"
g.terminal_color_7 = "#475258"
g.terminal_color_8 = "#d3c6aa"
g.terminal_color_9 = "#f3bfc0"
g.terminal_color_10 = "#d3e0c0"
g.terminal_color_11 = "#eddebf"
g.terminal_color_12 = "#bfddd9"
g.terminal_color_13 = "#ebccdb"
g.terminal_color_14 = "#c1e0c9"
g.terminal_color_15 = "#475258"
